<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
  <ScriptPackage>
    <Script isActive="yes" isFolder="no">
        
      <name>README.md</name>
      <script>--[[ README.md
# ErionMud UI

Erion is an immersive medieval fantasy world since 2005 with a fun and friendly playerbase, challenging quests/missions, and an excellent class/skill system.

This [Mudlet](https://www.mudlet.org) UI was created and themed for [Erion Mud](https://www.erionmud.com).  
Based on the original package: ErionUI 1.0 by Caelinus [(github.com/Caelinus)](https://www.github.com/Caelinus)

See [INSTALL.md](INSTALL.md) for installation details.

&lt;img src="src/resources/images/ui-fullscreen.png" alt="ErionMud UI" width="800"/&gt;

This package was built using [Muddler](https://github.com/demonnic/muddler) and [DeMuddler](https://github.com/Edru2/DeMuddler)

This project is completely free and open source. Feel free to clone, copy, and modify as you like.

## Ideas, TODOs, and Known Issues

### Known Issues

- Fix the "City of", "Land of" bug in the quest area regex. It doesn't always grab the whole location name.

### TODOs

- Make sure all chat channels are properly captured (ongoing).
- Capture other events (Hero, Legend, etc.)
- Add global quests details to the top container.
- Add current debuffs to the bottom or right side of the bottom container.
- Work on UI help files.

### Ideas

- Get the Mudlet mapper setup.
- Incorporate Waypoints in custom runtos.
- Track AutoSkill and KillSkill.
- Add weather and moon cycles to the lower right.
- Add a Global Quest alert for your level range.
- Clean up the top container notifications. Maybe split the top with an HBox?
  - This would allow for static notifications on the right and quest, etc. stuff on the left.
- Add a spot to list all mobs in a room.
  - Maybe move Events to the top container and use its left space as a mob list?

]]</script>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      
    </Script>
    <Script isActive="yes" isFolder="no">
        
      <name>1 UI Start Event</name>
      <script>
-----------------------------------------------------------------------
-- ErionMud UI
---------------
--
-- A UI for Erion Mud (www.erionmud.com)
--
-- Authors: 
--   Daikojun (github.com/ssharpjr)
--   Many core components and code came from "ErionUI 1.0" by Caelinus
--     (https://github.com/caelinus/ErionMud-UI)
--
-----------------------------------------------------------------------

-- Create a namespace for the UI
ui = ui or {}

function StartUp()
-- Set initial variables
  ui.version = "1.2.2"
  ui.GameName = "ErionMud"
  ui.SettingsDB = {}
  LoadUISettings()  -- Functions/UI Functions
  
  uiCecho("ErionMud UI &lt;cyan&gt;v"..ui.version.. " &lt;green&gt;Loaded&lt;reset&gt;", false, false)
    
  -- Set the theme
  if ui.SettingsDB["theme"] then
    ui.CurrentTheme = ui.SettingsDB["theme"]
    ui.CurrentThemeName = ui.SettingsDB["theme_name"]
  else
    ui.CurrentTheme = "er"
    ui.CurrentThemeName = "Erion Green"
  end
  SetTheme(ui.CurrentTheme)
  uiCecho("&lt;yellow&gt;Enter '&lt;cyan&gt;uitheme&lt;yellow&gt;' to change the theme")
  echo("\n\n")
    
  ui.StartUp = true  -- Hold off certain triggers while this is true
  
  
  -- Initialize the UI!
  raiseEvent("InitializeUI")
  
  tempRegexTrigger("Welcome to Erion!|Reconnecting",
    function()
      raiseEvent("SetDefaultMudSettings")
      local ConnectType = matches[1]
      --echo("\n Match: " .. ConnectType)
      
      -- tempTimer(1, function()
        -- echo("\n\n")
        -- uiCecho("&lt;green&gt;ErionMud UI &lt;cyan&gt;"..ui.version.."&lt;reset&gt;\n")
        -- uiCecho("&lt;yellow&gt;Enter '&lt;cyan&gt;uihelp&lt;yellow&gt;' to access the UI help files\n")
        -- uiCecho("&lt;yellow&gt;Enter '&lt;cyan&gt;uitheme&lt;yellow&gt;' to change the theme\n")
        -- -- cecho("\n\n&lt;green&gt;*&lt;yellow&gt;*&lt;green&gt;* &lt;white&gt;Vote on TMC   : ")
        -- -- cechoLink("&lt;cyan&gt;https://bit.ly/354iWXE &lt;purple&gt;&lt;--- click me!)", function() openUrl("https://bit.ly/354iWXE") end, 
          -- -- "Vote for Erion on TMC!", true)
        -- -- cecho(" &lt;green&gt;*&lt;yellow&gt;*&lt;green&gt;*\n")
        -- 
        -- 
        -- -- Send to the top container as well
        -- -- ui.TopContainerMC:clear()
        -- -- cecho("ui.TopContainerMC","&lt;forest_green&gt;-&lt;green&gt;=&lt;gold&gt;[&lt;cyan&gt;Welcome to the &lt;green&gt;ErionMud &lt;cyan&gt;UI!&lt;gold&gt;]&lt;green&gt;=&lt;forest_green&gt;-\n")
        -- -- cecho("ui.TopContainerMC","&lt;yellow&gt;Enter '&lt;cyan&gt;uihelp&lt;yellow&gt;' to access the UI help files\n")
        -- -- cecho("ui.TopContainerMC","&lt;green&gt;*&lt;yellow&gt;*&lt;green&gt;*  &lt;white&gt;Vote for &lt;green&gt;ErionMud &lt;white&gt;on TMC : ")
        -- -- cechoLink("ui.TopContainerMC","&lt;cyan&gt;https://bit.ly/354iWXE", function() openUrl("https://bit.ly/354iWXE") end,
          -- -- "Vote for Erion on TMC!", true)
        -- -- cecho("ui.TopContainerMC","  &lt;green&gt;*&lt;yellow&gt;*&lt;green&gt;*")
        -- -- cechoLink("ui.TopContainerMC", "  &lt;purple&gt;(Click to clear)", function() ui.TopContainerMC:clear() end,
          -- -- "Click to clear this console", true)
        -- end)
      
      if ConnectType == "Reconnecting" then
      tempTimer(1.5, [[
        echo("\n")
        send("look")
      ]])
      end
      
      tempTimer(2, [[ ui.StartUp = false ]])  -- End startup
      tempTimer(2.5, [[ GetClasses() ]])  -- Populate the left status container
      tempTimer(3, function()
        -- Send Additional commands on login
        send(" ")
        send("mudstats")  -- Get current game stats
        end)
    end, 1)
end

registerAnonymousEventHandler("sysConnectionEvent", "StartUp")</script>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      
    </Script>
    <Script isActive="yes" isFolder="no">
        
      <name>2 Init UI</name>
      <script>-- Basic ErionMud UI with layered containers, labels, and miniconsoles

ui = ui or {}

-- Player variables
ui.PlayerName = ""
ui.ActiveClass = ""
ui.ActiveClassLevel = ""
ui.PClass = ""
ui.PSubclass = ""
ui.SecClass = ""
ui.SecSubclass = ""
--ui.PClassLevel = ""
--ui.PSubclassLevel = ""
--ui.SecClassLevel = ""
--ui.SecSubclassLevel = ""

-- Event variables
ui.Exp2k = false
ui.Exp4k = false
ui.SpriteType = nil
ui.SpriteLocation = nil
ui.SpriteTimer = nil

-- Crafting/Skilling variables
-- Fishing
ui.Jiggled = false
ui.JiggleCounter = false

----------------------------------------------------------------------
----------------------------------------------------------------------

--Buffers and such
  createBuffer("MainBuffer")
  createBuffer("ChatBuffer")
    
-- Debugging StyleSheet - show some borders and such
ui.DebugSS = ([[
    background: black;
    border: 2px solid white;
    border-radius: 10px;
  ]])

function InitUI()
  -- Reset buffer vars
  CMap = 0
  Score_Buffer_Count = 0

  -- Set the main window borders
  setBorderColor(0,0,0)
  setBorderTop(0)
  setBorderBottom(0)
  setBorderLeft(300)
  setBorderRight(0)
  
  -- Calculate container widths
  -- The left container will use 15% of the total screen
  -- The right container will use 25% of the total screen
  -- These can be adjusted as desired once the containers are unlocked.
  ui.mw, ui.mh = getMainWindowSize()
  ui.mcw = getMainConsoleWidth()
  ui.LeftContainerWidth = (ui.mw * 0.15)  -- 15% of the screen
  ui.RightContainerWidth = (ui.mw * 0.25)  -- 25% of the screen
  ui.TopContainerWidth = (ui.mw - (ui.LeftContainerWidth + ui.RightContainerWidth))
  ui.BottomContainerWidth = ui.TopContainerWidth
  ui.TopContainerHeight = 120  -- This is static to hold the needed information
  ui.BottomContainerHeight = 80 -- This is static to hold the needed information
  ui.CmdLineStart = ui.LeftContainerWidth + 10  -- Adjust this offset accordingly
  ui.AnsiMapWidth = 140  -- This is static so the complete map is displayed
  ui.AnsiMapLeftMargin = ((ui.LeftContainerWidth/2) - (ui.AnsiMapWidth/2))  -- Ratio to keep it centered
  
  -- Set Fonts
  setFont("Bitstream Vera Sans Mono")
  setFontSize(11)
    
  -- Main CSS for adjustable containers
  ui.MainAdjLabelStyle = "background-color:rgba(0,0,0,100%); border: 0px solid rgb(0,0,0);"
  ui.MainButtonStyle = [[
        QLabel{ border-radius: 3px; background-color: rgba(40,40,40,100%);}
        QLabel::hover{ background-color: rgba(60,60,60,50%);}
        ]]
  
  -- Build GUI
  BuildLeft()
  BuildTop()
  BuildBottom()
  BuildRight()
  
end

registerAnonymousEventHandler("InitializeUI", "InitUI")</script>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      
    </Script>
    <Script isActive="yes" isFolder="no">
        
      <name>3 Set MUD Settings</name>
      <script>-- Set in-game toggles for the UI
-- Use "PROMPT DEFAULT" to reset your prompt to default. 
--   This is useful if you are playing without this UI package.
function SetMudSettings()
  send("toggle +tick", false)
  send("toggle +compact", false)
  send("toggle +map", false)
  send("prompt #1%h#2%H#3%m#4%M#5%p#6%T#7%x#8%X#9%g#10%C#11%u#12%r#13%e#14%L#15%I#16%n#17%B#18%S#19%R#20%f#21%F#22%J#23%j#24%G#25%k#26%K#27%N#28%P#29%Z#30%V#", false)
end

registerAnonymousEventHandler("SetDefaultMudSettings", "SetMudSettings")</script>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      
    </Script>
    <ScriptGroup isActive="yes" isFolder="yes">
        
      <name>Functions</name>
      <script>-- Utility Functions

-- Commas in large numbers
function commaValue(n)
  if n == nil then return "" end
  if type(n) == "number" then
    n = tostring(n)
  elseif type(n) ~= "string" then
    return tostring(n) -- handle booleans, tables, etc.
  end

  -- Try to match "digits with optional prefix/suffix"
  local left, num, right = n:match("^([^%d]*%d)(%d*)(.-)$")
  if not left then
    return n -- if no digits, just return unchanged
  end

  return left .. (num:reverse():gsub("(%d%d%d)", "%1,"):reverse()) .. right
end


function commaValueOriginal(n)
  -- credit http://richard.warburton.it
  -- http://lua-users.org/wiki/FormattingNumbers
  local left, num, right = string.match(n, '^([^%d]*%d)(%d*)(.-)$')
  return left .. (num:reverse():gsub('(%d%d%d)', '%1,'):reverse()) .. right
end


function firstToUpper(str)
    -- http://lua-users.org/wiki/StringRecipes
    if str == nil then return end
  return (str:gsub("^%l", string.upper))
end


-- Center a string of text based on a border length
function centerText(text)
  local border_length = 70
  tlen = string.len(text)
  leading_spaces = ((border_length/2) - (tlen/2))
  t = string.rep(' ', leading_spaces)..text
  return t
end


--Rounding Function
  function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
  end

-- Trim trailing whitespace
function trim(s)
  return s:gsub("%s+$", "")
end

-- Safe value functions. Helps fight errors from blank or nil variables.
function safe_string(s, default) return (s and s ~= "") and s or default end
function safe_number(n, default) return tonumber(n) or default end
function safe_div(numerator, denominator) return (denominator ~= 0) and (numerator/denominator) or 0 end</script>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      <Script isActive="yes" isFolder="no">
          
        <name>Functions</name>
        <script>-- Utility Functions

-- Commas in large numbers
function commaValue(n)
  if n == nil then return "" end
  if type(n) == "number" then
    n = tostring(n)
  elseif type(n) ~= "string" then
    return tostring(n) -- handle booleans, tables, etc.
  end

  -- Try to match "digits with optional prefix/suffix"
  local left, num, right = n:match("^([^%d]*%d)(%d*)(.-)$")
  if not left then
    return n -- if no digits, just return unchanged
  end

  return left .. (num:reverse():gsub("(%d%d%d)", "%1,"):reverse()) .. right
end


function commaValueOriginal(n)
  -- credit http://richard.warburton.it
  -- http://lua-users.org/wiki/FormattingNumbers
  local left, num, right = string.match(n, '^([^%d]*%d)(%d*)(.-)$')
  return left .. (num:reverse():gsub('(%d%d%d)', '%1,'):reverse()) .. right
end


function firstToUpper(str)
    -- http://lua-users.org/wiki/StringRecipes
    if str == nil then return end
  return (str:gsub("^%l", string.upper))
end


-- Center a string of text based on a border length
function centerText(text)
  local border_length = 70
  tlen = string.len(text)
  leading_spaces = ((border_length/2) - (tlen/2))
  t = string.rep(' ', leading_spaces)..text
  return t
end


--Rounding Function
  function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
  end

-- Trim trailing whitespace
function trim(s)
  return s:gsub("%s+$", "")
end

-- Safe value functions. Helps fight errors from blank or nil variables.
function safe_string(s, default) return (s and s ~= "") and s or default end
function safe_number(n, default) return tonumber(n) or default end
function safe_div(numerator, denominator) return (denominator ~= 0) and (numerator/denominator) or 0 end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>UI functions</name>
        <script>-- UI Functions

ui = ui or {}

ui.settingsFile = "/erionmud_ui_settings.db"

-- Create a simple table/DB for saving/loading persistent data.
function SaveUISettings()
  local filename = getMudletHomeDir()..ui.settingsFile
  if ui.SettingsDB then
    table.save(filename, ui.SettingsDB)
  else
    tempTable = {}
    table.save(filename, tempTable)
  end
end


function LoadUISettings()
  local file_exists = io.open(getMudletHomeDir()..ui.settingsFile) ~= nil
  if file_exists == false then
    SaveUISettings()
  end
  local filename = getMudletHomeDir()..ui.settingsFile
  ui.SettingsDB = {}
  table.load(filename, ui.SettingsDB)
end


-- Add the UI prefix "-=[UI]=-" to each echo
function uiCecho(text, newlinePrefix, newlineSuffix)
  newlinePrefix = newlinePrefix or true
  newlineSuffix = newlineSuffix or false
  s = "&lt;forest_green&gt;-&lt;green&gt;=&lt;gold&gt;[&lt;cyan&gt;UI&lt;gold&gt;]&lt;green&gt;=&lt;forest_green&gt;- &lt;yellow&gt;"..text.."&lt;reset&gt;"
    
  if newlinePrefix and newlineSuffix then
    s = "\n"..s.."\n"
  elseif newlinePrefix and not newlineSuffix then
    s = "\n"..s
  elseif newlineSuffix and not newlinePrefix then
  s = s.."\n"
  end

  cecho(s)
end


-- Capture and delete a SCORE block silently
function SilentScoreCapture()
  if ui.scoreInProgress then
    -- cecho("&lt;yellow&gt;[WARN] SCORE capture already running; ignored.\n")
    return
  end

  ui.scoreInProgress = true
  ui.scoreStartLine = nil

  enableTrigger("ScoreCaptureStart")
  send("score", false)

  local footerPattern = [[^For more character information use aff, mults, sigil, worth, and whois\.$]]
  local endID
  endID = tempRegexTrigger(footerPattern, function()
    local startLine = ui.scoreStartLine
    local endLine = getLineNumber()

    if not startLine or startLine &gt; endLine then
      -- cecho("&lt;red&gt;[ERROR] SCORE start/end invalid; aborting cleanup.\n")
    else
      local block = getLines("main", startLine, endLine)

      -- Parse stats
      ParseScoreBuffer(block)

      -- Delete captured lines from the main window
      local n = endLine - startLine + 1
      for _ = 1, n do
        moveCursor("main", 1, startLine)
        deleteLine()
      end

      -- cecho(f("&lt;green&gt;[DEBUG] SCORE block captured, parsed, and deleted ({n} lines).\n"))
    end

    if endID then killTrigger(endID) end
    disableTrigger("ScoreCaptureStart")
    ui.scoreStartLine  = nil
    ui.scoreInProgress = false
  end)

  tempTimer(5, function()
    if ui.scoreInProgress then
      -- cecho("&lt;red&gt;[ERROR] SCORE footer not seen; cleaning up.\n")
      if endID then killTrigger(endID) end
      disableTrigger("ScoreCaptureStart")
      ui.scoreStartLine  = nil
      ui.scoreInProgress = false
    end
  end)
end


-- Get/Set stat variables from the captured SCORE output
function ParseScoreBuffer(block)
  for _, line in ipairs(block) do
    -- Player name + active class
    local player, class = line:match("^%|%s+(%w+) the (%w+)%s+%|")
    if player and class then
      -- Player Name should have been captured on login, but if not, get it here.
      if ui.PlayerName ~= player then
        ui.PlayerName  = player
      end
      ui.ActiveClass = class
    end
    
    -- Level
    local lvl = tonumber(line:match("Level%s*:%s*(%d+)"))
    if lvl then
      ui.ActiveClassLevel = lvl
    end

    -- Alignment
    local align = line:match("Align%s+:%s+(%w+)%s+%|$")
    if align then
      ui.alignment = align
    end

    -- Primary/Secondary class
    local pclass, sclass = line:match("Cls%s+:%s+([%w%-]+)%s*,?%s*([%w%-]*)%s*%|$")
    if pclass then
      ui.PClass = pclass
      ui.SecClass = (sclass ~= "" and sclass) or nil
    end

    -- Primary/Secondary subclass
    local psub, ssub = line:match("Sub%s+:%s+([%w%-]+)%s*,?%s*([%w%-]*)%s*%|$")
    if psub then
      ui.PSubclass = psub
      ui.SecSubclass = (ssub ~= "" and ssub) or nil
    end

    -- Active class level (Tnl / Level)
    -- local tnl, lvl = line:match("Tnl%s+:%s+(%d+)%s+%(%s*L%.(%d+)%)")
    local tnl = line:match("Tnl%s*:%s*(%d+)")
    if tnl and lvl then
      ui.ActiveClassLevel = tonumber(lvl)
      ui.Tnl = tonumber(tnl)
    end
  end
end


function GetClasses()
  enableTrigger("ScoreCaptureStart")
  --send("score", false)
  SilentScoreCapture()
end


-- Reapply the prompt colors for "pray gods"
function setPrayGodsColors()
  -- [&gt;pray gods&lt;]
  local t = "&lt;ansi_cyan&gt;[&lt;cyan&gt;&gt;&lt;ghost_white&gt;pr&lt;ansi_white&gt;a&lt;dim_gray&gt;y g&lt;ansi_white&gt;o&lt;ghost_white&gt;ds&lt;cyan&gt;&lt;&lt;ansi_cyan&gt;]"
  return t
end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Pet HP</name>
        <script>-- Re-Colorize Pet HP!

ui = ui or {}

function GetPetHP()
  -- Create a table of pet HP
  -- I'm sure there is a cleaner way to do this, but here it is...
  
  local t1 = {}
  local t2 = {}
  local php = ""
  
  
  -- Clean up data
  php = ui.PetsHP:gsub("[%%]", "")  -- Remove "%"
  php = php:gsub("[%|]",":")  -- Replace "|" with ":" so it gets split properly
  
  -- Split at the ":"
  for str in string.gmatch(php, "([^:]+)") do
    table.insert(t1, str)
  end
  -- Returns { "1", "100", "2", "100", "3", "100", "4", "100" }
  
  -- Build a new table (max pet count is 10, so 20 entires)
  if t1[1] then table.insert(t2, t1[2]) end
  if t1[3] then table.insert(t2, t1[4]) end
  if t1[5] then table.insert(t2, t1[6]) end
  if t1[7] then table.insert(t2, t1[8]) end
  if t1[9] then table.insert(t2, t1[10]) end
  if t1[11] then table.insert(t2, t1[12]) end
  if t1[13] then table.insert(t2, t1[14]) end
  if t1[15] then table.insert(t2, t1[16]) end
  if t1[17] then table.insert(t2, t1[18]) end
  if t1[19] then table.insert(t2, t1[20]) end

  -- Debug
  -- for k, v in ipairs(t2) do
   -- print(k..":"..v)
  -- end
  
  return t2
end


function ColorizePetHP()
  --[[
  Add color to the pet HP table depending on value
  100% = green
  76%+ = dark_green
  51%+ = yellow
  26%+ = orange
  0%+  = red
  
  or (using this right now)
  &gt;= 66% green
  &gt;= 33% yellow
  &lt;= 32% red
  ]]
  
  local petTab = GetPetHP()
  local t = {}
  local petStr = ""
  local lowest = math.huge
  
  -- Get the lowest pet HP for the status bar.
  for k, v in ipairs(petTab) do
    if tonumber(v) &lt; lowest then
      lowest = tonumber(v)
    end
  end
  ui.lowestPetHP = lowest or 100
  
  -- Add cecho color tags to each value
  for k, v in ipairs(petTab) do
    v = tonumber(v)
    -- if v == 100 then table.insert(t, "&lt;green&gt;"..v.."&lt;reset&gt;") end
    -- if v &gt;= 76 and v &lt; 100 then table.insert(t, "&lt;dark_green&gt;"..v.."&lt;reset&gt;") end
    -- if v &gt;= 51 and v &lt; 76 then table.insert(t, "&lt;yellow&gt;"..v.."&lt;reset&gt;") end
    -- if v &gt;= 26 and v &lt; 51 then table.insert(t, "&lt;orange&gt;"..v.."&lt;reset&gt;") end
    -- if v &gt;= 0 and v &lt; 26 then table.insert(t, "&lt;red&gt;"..v.."&lt;reset&gt;") end
    if v &gt;= 66 then table.insert(t, "&lt;green&gt;"..v.."&lt;reset&gt;") end
    if v &lt;= 66 and v &gt;= 33 then table.insert(t, "&lt;yellow&gt;"..v.."&lt;reset&gt;") end
    if v &lt; 33 then table.insert(t, "&lt;red&gt;"..v.."&lt;reset&gt;") end
  end
  
  -- Create a new cecho-compatible string
  -- Format: 1:100%|2:100%|3:100%|4:100%
  --petStr = "&lt;white&gt;"
  for k, v in ipairs(t) do
    petStr = petStr.."&lt;white&gt;"..k..":"..v.."&lt;white&gt;%|"
  end
  
  --cecho(petStr)
  return petStr

end
</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      
    </ScriptGroup>
    <ScriptGroup isActive="yes" isFolder="yes">
        
      <name>UI Build Functions</name>
      <script/>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      <Script isActive="yes" isFolder="no">
          
        <name>Build Left</name>
        <script>-- Functions to build the left UI
-- The layout is:
-- - A main container at 100% of the needed space.
-- - A main label for applying stylesheets to the container. 
--   - This should be slightly smaller than the main container (5px).
-- - MiniConsoles inside the main label as needed.
--   - These should be slightly smaller than the main label (5px).

ui = ui or {}

function BuildLeft()

  --============================================================
  -- Main Left Container and Main Label
  --============================================================
  ui.LeftContainer = ui.LeftContainer or Adjustable.Container:new({
    name = "ui.LeftContainer",
    titleText = "Left Container",
    x = 0,
    y = 0,
    width = ui.LeftContainerWidth,
    height = "100%",
    attached = "left",
    autoSave = false,
    autoLoad = false,
    adjLabelstyle = ui.MainAdjLabelStyle,
    buttonstyle = ui.MainButtonStyle,
  })
  
  ui.LeftContainer:lockContainer(ui.LockStyle)
  ui.LeftContainer:changeMenuStyle("dark")
  
  -- Main Left Label
  ui.LeftContainerLabel = Geyser.Label:new({
    name = "ui.LeftContainerLabel",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  }, ui.LeftContainer)  -- Attach to the main left container
  
  -- Main Left Label Stylesheet
  ui.LeftContainerLabel:setStyleSheet(ui.MainStyleSheet)
  
  
  --============================================================
  -- Game Logo
  --============================================================  
  ui.GameNameLabel = Geyser.Label:new({
    name = "ui.GameNameLabel",
    x = 5, y = 5, -- Compensate for the rounded borders
    width = "100%-10",
    height = "5%",
    color = ui.BgColor,
  }, ui.LeftContainerLabel)  -- Attach to the main left label

  ui.GameNameLabel:setFont("Copperplate Gothic Light")
  ui.GameNameLabel:setFontSize(20)
  ui.GameNameLabel:echo(ui.GameName, "#afa15a", "cub")
  
  --Debug
  local debugGameNameLabel = false
  if debugGameNameLabel then
    ui.GameNameLabel:setStyleSheet(ui.DebugSS)
  end
    
  
  --============================================================
  -- Player Information
  --============================================================
  ui.PlayerInfoLabel = Geyser.Label:new({
    name = "ui.PlayerInfoLabel",
    x = 5,
    y = "5%+10",
    width = "100%-10",
    height = "50%",  -- Watch for overlap with AnsiMap label
    color = ui.BgColor,
  }, ui.LeftContainerLabel)
  
  --ui.PlayerInfoLabel:setFont("Bitstream Vera Sans Mono")
  --ui.PlayerInfoLabel:setFontSize(10)
  --ui.PlayerInfoLabel:echo("&lt;b&gt;Player Info&lt;/b&gt;")
  --ui.PlayerInfoLabel:setStyleSheet([[
  -- qproperty-alignment: 'AlignLeft | AlignTop';
  --]])
  
  ui.PlayerInfoMC = Geyser.MiniConsole:new({
    name = "ui.PlayerInfoMC",
    x = 5,
    y = 5,
    width = "100%-10",
    height = "100%-10",
    autoWrap = false,
    scrollBar = false,
    color = ui.BgColor,
    fontSize = 10,
  }, ui.PlayerInfoLabel)
  
  ui.PlayerInfoMC:disableScrolling()

  
  --Debug
  local debugPlayerInfoLabel = false
  if debugPlayerInfoLabel then
    ui.PlayerInfoLabel:setStyleSheet(ui.DebugSS)
    ui.PlayerInfoMC:setColor("gray")
  end
  

  --============================================================
  -- ANSI Map
  --============================================================
  ui.AnsiMapLabel = Geyser.Label:new({
    name = "ui.AsciiMapLabel",
    x = 5,
    y = "55%",
    width = "100%-10",
    height = "45%-5",  -- Watch for overlap with Player label
    color = ui.BgColor,
    --color = "black",
  }, ui.LeftContainerLabel)
  
  --Debug
  local debugAnsiMapLabel = false
  if debugAnsiMapLabel then
    ui.AnsiMapLabel:setStyleSheet(ui.DebugSS)
  end
  
  -- ANSI Map Name Block
  ui.AnsiMapNameMC = Geyser.MiniConsole:new({
    name = "ui.AnsiMapNameMC",
    x = 5,
    y = 5,
    width = "100%-10",
    height = 90,
    autoWrap = false,
    scrollBar = false,
    color = ui.BgColor,
    --color = "cyan",
    fontSize = 10
  }, ui.AnsiMapLabel)
  
  ui.AnsiMapNameMC:disableScrolling()
    
  -- ANSI Map
  ui.AnsiMapMC = Geyser.MiniConsole:new({
    name = "ui.AnsiMapMC",
    x = ui.AnsiMapLeftMargin,
    y = "100%-315",
    width = ui.AnsiMapWidth,
    height = 265,
    autoWrap = false,
    scrollBar = false,
    color = ui.BgColor,
    --color = "black",
    fontSize = 15,
  }, ui.AnsiMapLabel)
  
  ui.AnsiMapMC:disableScrolling()
  
  -- Exits
  ui.ExitsMC = Geyser.MiniConsole:new({
    name = "ui.ExitsMC",
    x = 10,
    y = "100%-40",
    width = "80%",
    height = 35,
    autoWrap = true,
    scrollBar = false,
    color = ui.BgColor,
    --color = "black",
    fontSize = 10,
  }, ui.AnsiMapLabel)  
  
  ui.ExitsMC:disableScrolling()
  
end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Build Top</name>
        <script>-- Functions to build the top UI
-- The layout is:
-- - A main container at 100% of the needed space.
-- - A main label for applying stylesheets to the container. 
--   - This should be slightly smaller than the main container (5px).
-- - MiniConsoles inside the main label as needed.
--   - These should be slightly smaller than the main label (5px).

ui = ui or {}

function BuildTop()

  -- Main Top Container
  -- The "ui" dimension variables are defined in the "2 Init UI" script
  ui.TopContainer = ui.TopContainer or Adjustable.Container:new({
    name = "ui.TopContainer",
    titleText = "Top Container",
    x = (ui.LeftContainerWidth + 5), 
    y = 0,
    width = (ui.TopContainerWidth - 10),
    height = ui.TopContainerHeight,
    attached = "top",
    autoSave = false,
    autoLoad = false,
    adjLabelstyle = ui.MainAdjLabelStyle,
    buttonstyle = ui.MainButtonStyle,
  })
  
  ui.TopContainer:changeMenuStyle("dark")
  ui.TopContainer:lockContainer(ui.LockStyle)
  
  -- Main Top Label
  ui.TopContainerLabel = Geyser.Label:new({
    name = "ui.TopContainerLabel",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  }, ui.TopContainer)  -- Attach to the main top container
  
  -- Main Top Label Stylesheet
  ui.TopContainerLabel:setStyleSheet(ui.MainStyleSheet)
  
  -- Mud Event console
  ui.TopContainerMCTop = Geyser.MiniConsole:new({
    name = "ui.TopContainerMCTop",
    x = 10,
    y = 10,
    width = "100%-20",
    height = 20,
    autoWrap = false,
    scrollBar = false,
    color = ui.BgColor,
    fontSize = 9,
  }, ui.TopContainerLabel)
  
  ui.TopContainerMCTop:disableScrolling()

  
  -- Top info console
  ui.TopContainerMC = Geyser.MiniConsole:new({
    name = "ui.TopContainerMC",
    x = 10,
    y = 30,
    width = "100%-20",
    height = "100%-40",
    autoWrap = false,
    scrollBar = false,
    color = ui.BgColor,
    fontSize = 9,
  }, ui.TopContainerLabel)
  
  ui.TopContainerMC:disableScrolling()
   
end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Build Bottom</name>
        <script>-- Functions to build the bottom UI
-- The layout is:
-- - A main container at 100% of the needed space.
-- - A main label for applying stylesheets to the container. 
--   - This should be slightly smaller than the main container (5px).
-- - MiniConsoles inside the main label as needed.
--   - These should be slightly smaller than the main label (5px).

ui = ui or {}

function BuildBottom()

  -- Main Bottom Container
  -- The "ui" dimension variables are defined in the "2 Init UI" script
  ui.BottomContainer = ui.BottomContainer or Adjustable.Container:new({
    name = "ui.BottomContainer",
    titleText = "Bottom Container",
    x = (ui.LeftContainerWidth + 5), 
    y = "100%-80",
    width = (ui.BottomContainerWidth - 10),
    height = ui.BottomContainerHeight,
    attached = "bottom",
    autoSave = false,
    autoLoad = false,
    adjLabelstyle = ui.MainAdjLabelStyle,
    buttonstyle = ui.MainButtonStyle,
  })
  
  ui.BottomContainer:changeMenuStyle("dark")
  ui.BottomContainer:lockContainer(ui.LockStyle)
  
  -- Main Bottom Label
  ui.BottomContainerLabel = Geyser.Label:new({
    name = "ui.BottomContainerLabel",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  }, ui.BottomContainer)  -- Attach to the main bottom container
  
  -- Main Bottom Label Stylesheet
  ui.BottomContainerLabel:setStyleSheet(ui.MainStyleSheet)
  
  
  ui.StatusMC = Geyser.MiniConsole:new({
    name = "ui.StatusMC",
    x = 5,
    y = 12,
    width = "100%-10",
    height = "100%-20",
    autoWrap = false,
    scrollBar = false,
    color = ui.BgColor,
    fontSize = 11,
  }, ui.BottomContainerLabel)

  ui.StatusMC:disableScrolling()
  
  -- Call other functions
  SetCMDStyle()
  SetBarStyle()

end


function SetCMDStyle () --Move Command Line

  setCmdLineStyleSheet("main", [[
    QPlainTextEdit {
      padding-left: ]] .. ui.CmdLineStart .. [[px;       /* change 100 to your number */
      background-color: black;   /* change it to your background color */
    }
  ]])

end

function SetBarStyle () --Sets bar settings
  -- Health
  hpbar = Geyser.Gauge:new({
    name="hpbar",
    x = 5,
    y = 0,
    width=120, height=15,
  }, ui.StatusMC)
  hpbar.front:setStyleSheet([[
    background-color: #cc0000;
    border-radius: 2;
  ]])
  hpbar.back:setStyleSheet([[
    background-color: #660000;
    border-radius: 2;
  ]])
  hpbar.text:setStyleSheet([[
    text-align: right;
    padding-right: 5px;
  ]])
  hpbar:setAlignment("center")

  -- Energy
  enbar = Geyser.Gauge:new({
    name="enbar",
    x = 5,
    y = 18,
    width=120, height=15,
  }, ui.StatusMC)
  enbar.front:setStyleSheet([[
    background-color: #0a5293;
    border-radius: 2;
  ]])
  enbar.back:setStyleSheet([[
    background-color: #073763;
    border-radius: 2;
  ]])
  enbar.text:setStyleSheet([[
    text-align: right;
    padding-right: 5px;
  ]])
  enbar:setAlignment("center")
  
  -- Pet Health
  phpbar = Geyser.Gauge:new({
    name="phpbar",
    x = 5,
    y = 36,
    width=120, height=15,
  }, ui.StatusMC)
  phpbar.front:setStyleSheet([[
    background-color: #006600;
    border-radius: 2;
  ]])
  phpbar.back:setStyleSheet([[
    background-color: #660000;
    border-radius: 2;
  ]])
  phpbar.text:setStyleSheet([[
    text-align: right;
    padding-right: 5px;
  ]])
  phpbar:setAlignment("center")
end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Build Right</name>
        <script>-- Functions to build the right UI
-- The layout is:
-- - A main container at 100% of the needed space.
-- - A main label for applying stylesheets to the container. 
--   - This should be slightly smaller than the main container (5px).
-- - MiniConsoles inside the main label as needed.
--   - These should be slightly smaller than the main label (5px).

ui = ui or {}


function BuildRight()
  -- The "ui" dimension variables are defined in the "2 Init UI" script
  ui.RightContainer = ui.RightContainer or Adjustable.Container:new({
    Name = "ui.RightContainer",
    titleText = "Right Container",
    x = "-25%", 
    y = 0,
    width = ui.RightContainerWidth,
    height= "100%-75",
    attached = "right",
    autoSave = false,
    autoLoad = false,
    adjLabelstyle = ui.MainAdjLabelStyle,
    buttonstyle = ui.MainButtonStyle,
  })
  
  ui.RightContainer:changeMenuStyle("dark")
  ui.RightContainer:lockContainer(ui.LockStyle)

  -- Main Right Label
    ui.RightContainerLabel = Geyser.Label:new({
      name = "ui.RightContainerLabel",
      x = 0, y = 0,
      width = "100%",
      height = "100%-10",
    }, ui.RightContainer)  -- Attach to the main right container
    
    -- Main Right Label Stylesheet
    ui.RightContainerLabel:setStyleSheet(ui.MainStyleSheet)


    ui.ChatMC = Geyser.MiniConsole:new({
    name = "ui.ChatMC",
    x = 10,
    y = 20,
    width="100%-20",
    height="100%-40",
    autoWrap = true,
    scrollBar = false,
    color = ui.BgColor,
    fontSize = 11,
  }, ui.RightContainerLabel)

end


</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      
    </ScriptGroup>
    <ScriptGroup isActive="yes" isFolder="yes">
        
      <name>UI Help</name>
      <script/>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      <Script isActive="yes" isFolder="no">
          
        <name>Help main</name>
        <script>-- This is the main help file for the Erion UI.
-- Use this to add help sections.
-- Put each section in its own script.

function uiHelpMain()
  cecho("\n&lt;yellow&gt;======================================================================")
  cecho("\n&lt;green&gt;"..centerText("ErionMud UI Main Help File"))
  cecho("\n&lt;yellow&gt;======================================================================")
  echo("\n")
  cecho("\n&lt;green&gt;ErionMUD UI &lt;cyan&gt;v"..ui.version)
  cecho("\n&lt;cyan&gt;Author: &lt;yellow&gt;Daikojun (discord) (gitlab.com/ssharpjr, github.com/ssharpjr)")
  cecho("\n&lt;cyan&gt;Original package: &lt;yellow&gt;ErionUI 1.0 by Caelinus (github.com/Caelinus)")
  
  echo("\n")
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;green&gt;Introduction")
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;yellow&gt;This UI was created and themed for &lt;green&gt;ErionMud &lt;yellow&gt;(erionmud.com).")
  echo("\n")
  
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;green&gt;UI Help Files")
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;cyan&gt;uihelp commands&lt;yellow&gt; - Aliases used with this UI.")
  cecho("\n&lt;cyan&gt;uihelp features&lt;yellow&gt; - UI features (and WIPs).")
  cecho("\n&lt;cyan&gt;uihelp technical&lt;yellow&gt; - A technical document on how this UI works.")
  
  echo("\n")
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;green&gt;Set Up")
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;red&gt;NOTE: &lt;yellow&gt;This UI will change your prompt!")
  cecho("\n&lt;yellow&gt;      Use '&lt;cyan&gt;PROMPT ALL&lt;yellow&gt;' to reset it when you play on")
  cecho("\n&lt;yellow&gt;      clients other than Mudlet.")
  --cecho("\n&lt;yellow&gt;")
  cecho("\n&lt;yellow&gt;The following changes are sent to the MUD:")
  cecho("\n  &lt;cyan&gt;* &lt;yellow&gt;toggle +tick")
  cecho("\n  &lt;cyan&gt;* &lt;yellow&gt;toggle +compact")
  cecho("\n  &lt;cyan&gt;* &lt;yellow&gt;toggle +map")
  cecho("\n  &lt;red&gt;* &lt;yellow&gt;spam -daycycle (not implemented yet)")
  echo("\n")
  cecho("\n&lt;yellow&gt;Some optional packages you can use with this are:")
  cecho("\n  &lt;cyan&gt;* &lt;green&gt;Highlighter&lt;yellow&gt; - You can find it on packages.mudlet.org")
  cecho("\n  &lt;red&gt;* &lt;green&gt;ErionMud GamePack&lt;yellow&gt; - (not released just yet)")
  echo("\n")
  cecho("\n&lt;yellow&gt;======================================================================\n")
end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Help features</name>
        <script>function uiHelpFeatures()
  cecho("\n&lt;yellow&gt;======================================================================")
  cecho("\n&lt;green&gt;"..centerText("ErionMud UI Features"))
  cecho("\n&lt;yellow&gt;======================================================================")
  cecho("\n\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;cyan&gt; Features")
  cecho("\n&lt;yellow&gt;----------------------------------------------------------------------")
  cecho("\n&lt;yellow&gt;This UI is packed with features!")
  cecho("\n&lt;yellow&gt;")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Selectable UI themes! (check out '&lt;cyan&gt;uitheme&lt;yellow&gt;')")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Clickable 'VOTE on TMC' link")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Chats and notices in the right console.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Character stats in the left console (with commas!).")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Class list with active target class marker.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Main class and target class levels.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;MUD Events in the top console.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Active events and timers in the left console.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Active quest info in the top console.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Quest bonus timer visible beside the quest timer.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Full ANSI map with area info and exits in the left console.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Vitals bars and details in the bottom console.")
  cecho("\n&lt;cyan&gt;  * &lt;yellow&gt;Active Target and pet info in the bottom console.")
  cecho("\n&lt;yellow&gt;")
  cecho("\n&lt;yellow&gt;[&lt;cyan&gt;Possible works in Progress&lt;yellow&gt;]")
  cecho("\n&lt;red&gt;  * &lt;yellow&gt;Active debuffs in the bottom console. (TODO)")
  cecho("\n&lt;red&gt;  * &lt;yellow&gt;Clickable Exits (from Caelinus's github) (TODO)")
  cecho("\n&lt;red&gt;  * &lt;yellow&gt;A Cortheus-proof bleu cheese filter! (Eh, it's a long shot)")
  echo("\n")
  cecho("\n&lt;yellow&gt;======================================================================\n")
end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Help commands</name>
        <script>function uiHelpCommands()
  cecho("\n&lt;yellow&gt;======================================================================")
  cecho("\n&lt;green&gt;"..centerText("ErionMud UI Commands"))
  cecho("\n&lt;yellow&gt;======================================================================")
  echo("\n")
  cecho("\n&lt;cyan&gt;uiclear &lt;top|right|chat&gt;&lt;yellow&gt; - Clears the entered console.")
  cecho("\n&lt;cyan&gt;uilock &lt;all|left|top|right|bottom&gt;&lt;yellow&gt; - Locks the entered container.")
  cecho("\n&lt;cyan&gt;uiunlock &lt;all|left|top|right|bottom&gt;&lt;yellow&gt; - Unlocks the entered container.")
  cecho("\n&lt;cyan&gt;uisave&lt;yellow&gt; - Saves all adjustable container states (as 'custom1').")
  cecho("\n&lt;cyan&gt;uiload&lt;yellow&gt; - Loads all adjustable container states (as 'custom1').")
  cecho("\n&lt;cyan&gt;uireset&lt;yellow&gt; - Reset all UI containers to their default states.")
  cecho("\n&lt;cyan&gt;uigetclasses&lt;yellow&gt; - Refreshes Class information variables.")
  echo("\n")
  cecho("\n&lt;cyan&gt;rtq&lt;yellow&gt; - After starting a quest, use this command to 'runto' this area.")
  echo("\n")
  cecho("\n&lt;yellow&gt;======================================================================\n")
end
</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Help technical</name>
        <script>function uiHelpTechnical()
  cecho("\n&lt;yellow&gt;======================================================================")
  cecho("\n&lt;green&gt;"..centerText("ErionMud UI Technical Notes"))
  cecho("\n&lt;yellow&gt;======================================================================")
  echo("\n")
  cecho("\n&lt;yellow&gt;ErionMud does not fully support MSDP or GMCP.")
  cecho("\n&lt;yellow&gt;All data is processed using text triggers.")
  echo("\n")
  cecho("\n&lt;yellow&gt;Nothing really here yet. Check the comments in the scripts for now.")
  echo("\n")
  cecho("\n&lt;yellow&gt;======================================================================\n")
end


-- Technical Notes

--[[
# Triggers

## ScoreCaptures 

CaptureActiveClass - captures the current character name and class
CaptureClass - captures the primary and secondary classes
CaptureSubclass - captures the primary and secondary subclasses
CaptureActiveClassLevel - captures the active class level


]]</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      
    </ScriptGroup>
    <ScriptGroup isActive="yes" isFolder="yes">
        
      <name>UI Themes</name>
      <script/>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      <Script isActive="yes" isFolder="no">
          
        <name>Themes</name>
        <script>-- Themes
-- If you want to add more themes, please following this process:
-- - Create a new "Scripts/UI Themes/Theme..." script with your CSS.
-- - Add your theme name and abbreviation to the comment list below.
-- - Add your theme to the SetTheme() function below.

--[[

"Erion Green", "er"   - This is the default theme. It's based on the colors from the erionmud.com website.
"Minimal Black", "mb" - This is close to the original minimal theme by Caelinus.

]]

ui = ui or {}

function ShowThemes()
  -- List available themes
  uiCecho("&lt;cyan&gt;Available UI Themes")
  uiCecho("&lt;green&gt;Erion Green    &lt;yellow&gt;[ &lt;cyan&gt;uitheme er &lt;yellow&gt;]")
  uiCecho("&lt;green&gt;Minimal Black  &lt;yellow&gt;[ &lt;cyan&gt;uitheme mb &lt;yellow&gt;]")
  echo("\n")
end


function SetTheme(theme)
  -- Set the theme requested by "Aliases/Set UI Theme"
  if theme == "er" then
    ui.CurrentTheme = "er"
    ui.CurrentThemeName = "Erion Green"
    ui.SettingsDB["theme"] = ui.CurrentTheme
    ui.SettingsDB["theme_name"] = ui.CurrentThemeName
    SaveUISettings()
    ThemeErionGreen()
    InitUI()
    send(" ")
    uiCecho("Theme set to: &lt;green&gt;Erion Green")
  elseif theme == "mb" then
    ui.CurrentTheme = "mb"
    ui.CurrentThemeName = "Minimal Black"
    ui.SettingsDB["theme"] = ui.CurrentTheme
    ui.SettingsDB["theme_name"] = ui.CurrentThemeName
    SaveUISettings()
    ThemeMinimalBlack()
    InitUI()
    send(" ")
    uiCecho("Theme set to: &lt;green&gt;Minimal Black")
  else
    -- Back to the default
    ui.CurrentTheme = "er"
    ui.SettingsDB["theme"] = ui.CurrentTheme
    --cecho("\n&lt;orange_red&gt;Theme not recognized.")
    --ShowThemes()
  end

end</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Theme Erion Green</name>
        <script>-- Erion Green Theme

ui = ui or {}

function ThemeErionGreen()
  ui.BorderColor = "#9f8e3d"  -- Erion Gold
  ui.BgColor = "#0c1510"      -- Erion Green
  ui.BgColorRGB = {12,21,16}  -- Erion Green in RGB (unpack(table))
  ui.LockStyle = "full"  -- Hides all borders. The container must be unlocked with a command.
  ui.MainStyleSheet = [[
      background: ]] .. ui.BgColor .. [[ ;
      border: 3px solid ]] .. ui.BorderColor .. [[ ;
      border-radius: 10px;
    ]]
end
</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>Theme Erion Minimal</name>
        <script>-- Erion Minimal Black Theme

ui = ui or {}

function ThemeMinimalBlack()
  ui.BorderColor = "black"
  ui.BgColor = "black"
  ui.BgColorRGB = {0,0,0}
  ui.LockStyle = "full"  -- Hides all borders. The container must be unlocked with a command.
  ui.MainStyleSheet = [[
      background: ]] .. ui.BgColor .. [[ ;
      border: 0px solid ]] .. ui.BorderColor .. [[ ;
      border-radius: 10px;
    ]]
end
</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      
    </ScriptGroup>
    <ScriptGroup isActive="yes" isFolder="yes">
        
      <name>UI Update Functions</name>
      <script/>
        
      <packageName/>
      
      <eventHandlerList>
</eventHandlerList>
      <Script isActive="yes" isFolder="no">
          
        <name>UI_UpdateStatus Event (Left)</name>
        <script>-- Function to redraw status console UI(s)

function UpdateStatus (event, LVL, FLV, NXP, GLD, QPS, HPS, MDP, QTM, ETM, GTM, JTM, XPE, QPE, QTE, PLT, GJY)
----------------------------------------------------------------------
-- Get Status data
----------------------------------------------------------------------

  -- Get player classes if needed
  if not ui.StartUp then
    if (ui.PlayerName == "") or (ui.PlayerName == nil) or
       (ui.PClass == "") or (ui.PClass == nil) or 
       (ui.ActiveClass == "") or (ui.ActiveClass == nil) or 
       (ui.ActiveClassLevel == "") or (ui.ActiveClassLevel == nil) then
      GetClasses()
    end
  end
  
  -- Complete 2nd Class Subclass names (SCORE cuts off at 18 total characters) 
  -- Ignore redundancies :) 
  if ui.SecSubclass then
    -- Mage
    if string.find(ui.SecSubclass, "Eleme", 1) then
      ui.SecSubclass = "Elementalist"
    end
    if string.find(ui.SecSubclass, "Battl", 1) then
      ui.SecSubclass = "BattleMage"
    end
    if string.find(ui.SecSubclass, "Plane", 1) then
      ui.SecSubclass = "Planewalker"
    end
    
    -- Cleric
    if string.find(ui.SecSubclass, "Preis", 1) then
      ui.SecSubclass = "Priest"
    end
    if string.find(ui.SecSubclass, "Shama", 1) then
      ui.SecSubclass = "Shaman"
    end
    if string.find(ui.SecSubclass, "Venom", 1) then
      ui.SecSubclass = "Venomist"
    end
    
    -- Thief
    if string.find(ui.SecSubclass, "Ninja", 1) then
      ui.SecSubclass = "Ninja"
    end
    if string.find(ui.SecSubclass, "Assas", 1) then
      ui.SecSubclass = "Assassin"
    end
    if string.find(ui.SecSubclass, "Spy", 1) then
      ui.SecSubclass = "Spy"
    end
    
    -- Warrior
    if string.find(ui.SecSubclass, "Gladi", 1) then
      ui.SecSubclass = "Gladiator"
    end
    if string.find(ui.SecSubclass, "Merce", 1) then
      ui.SecSubclass = "Mercenary"
    end
    if string.find(ui.SecSubclass, "Barba", 1) then
      ui.SecSubclass = "Barbarian"
    end
    
    -- Gaian
    if string.find(ui.SecSubclass, "Druid", 1) then
      ui.SecSubclass = "Druid"
    end
    if string.find(ui.SecSubclass, "Sage", 1) then
      ui.SecSubclass = "Sage"
    end
    if string.find(ui.SecSubclass, "Herba", 1) then
      ui.SecSubclass = "Herbalist"
    end
    
    -- Psionist
    if string.find(ui.SecSubclass, "Psibl", 1) then
      ui.SecSubclass = "Psiblade"
    end
    if string.find(ui.SecSubclass, "Menta", 1) then
      ui.SecSubclass = "Mentalist"
    end
    if string.find(ui.SecSubclass, "Telek", 1) then
      ui.SecSubclass = "Telekinetic"
    end
    
    --Illusionist
    if string.find(ui.SecSubclass, "Charm", 1) then
      ui.SecSubclass = "Charmer"
    end
    if string.find(ui.SecSubclass, "Trick", 1) then
      ui.SecSubclass = "Trickster"
    end
    if string.find(ui.SecSubclass, "Mirag", 1) then
      ui.SecSubclass = "Mirage"
    end
    
    
    --Archer
    if string.find(ui.SecSubclass, "Snipe", 1) then
      ui.SecSubclass = "Sniper"
    end
    if string.find(ui.SecSubclass, "Beast", 1) then
      ui.SecSubclass = "Beastmaster"
    end
    if string.find(ui.SecSubclass, "Scout", 1) then
      ui.SecSubclass = "Scout"
    end
    
    -- Necromancer
    if string.find(ui.SecSubclass, "BoneC", 1) then
      ui.SecSubclass = "BoneCollector"
    end
    if string.find(ui.SecSubclass, "Voodo", 1) then
      ui.SecSubclass = "Voodooist"
    end
    if string.find(ui.SecSubclass, "Diabo", 1) then
      ui.SecSubclass = "Diabolist"
    end
    
    -- Witch
    if string.find(ui.SecSubclass, "Occul", 1) then
      ui.SecSubclass = "Occultist"
    end
    if string.find(ui.SecSubclass, "White", 1) then
      ui.SecSubclass = "WhiteWitch"
    end
    if string.find(ui.SecSubclass, "Dream", 1) then
      ui.SecSubclass = "DreamWitch"
    end
    
    -- Monk
    if string.find(ui.SecSubclass, "Disci", 1) then
      ui.SecSubclass = "Disciple"
    end
    if string.find(ui.SecSubclass, "Zealo", 1) then
      ui.SecSubclass = "Zealot"
    end
    if string.find(ui.SecSubclass, "Defen", 1) then
      ui.SecSubclass = "Defender"
    end
  end
  
  -- Set classes, active class, and levels
  local act = "&lt;red&gt;(A)&lt;sky_blue&gt;"
  local active = ui.ActiveClass or ""
  local aclvl  = ui.ActiveClassLevel or ""
  local level  = ""
  local pclass = ui.PClass or ""
  local psub   = ui.PSubclass or ""
  local sclass = ui.SecClass or ""
  local ssub   = ui.SecSubclass or ""

  -- Don't show the "(A)" if the character only has 1 class
  if pclass == active and (psub ~= "None" or sclass ~= "") then
    pclass = pclass..act
  end
  -- if pclass == active then pclass = pclass..act end
  if psub == active then psub = psub..act end
  if sclass == active then sclass = sclass..act end
  if ssub == active then ssub = ssub..act end

  -- Debug
  -- cecho("\n&lt;orange_red&gt;DEBUG: active: "..active.."\n")
  -- cecho("&lt;orange_red&gt;DEBUG: pclass: "..pclass.."\n")
  -- cecho("&lt;orange_red&gt;DEBUG: psub: "..psub.."\n")
  -- cecho("&lt;orange_red&gt;DEBUG: sclass: "..sclass.."\n")

  -- Update level values
  FLV = tonumber(FLV) or 0
  LVL = tonumber(LVL) or 0
  if LVL == tonumber(aclvl) then
    if FLV == 0 then
      level = LVL
    else
      level = LVL.."  &lt;grey&gt;Faux: &lt;dark_orange&gt;"..FLV
    end
  else
    if FLV == 0 then
      level = LVL.." &lt;red&gt;("..aclvl
    else
      level = LVL.." &lt;red&gt;("..aclvl..")  &lt;grey&gt;Faux: &lt;dark_orange&gt;"..FLV
    end
  end

  -- Display quest bonus time (timer created by the trigger: Quests/Quest bonus timer)
  local questBonusTime = nil
  ui.questBonusTimer = ui.questBonusTimer or "0"
  if ui.questBonusTimer ~= "0" then
    questBonusTime = " &lt;yellow&gt;("..round(remainingTime(ui.questBonusTimer,0))..")"
  else
    questBonusTime = ""
  end
  
  -- Display expedition bonus time (timer created by the trigger: 
  --  - Expeditions/Exped Target Capture/Expedition bonus timer)
  local expedBonusTime = nil
  ui.expedBonusTimer = ui.expedBonusTimer or "0"
  if ui.expedBonusTimer ~= "0" then
    expedBonusTime = " &lt;yellow&gt;("..round(remainingTime(ui.expedBonusTimer,0))..")"
  else
    expedBonusTime = ""
  end
  
  -- Set the correct EXP multipler status
  local XpEvent = "2X XP:"  -- Set a default
  if ui.Exp2k then XpEvent = "2x XP:" end
  if ui.Exp4k then XpEvent = "4x XP:" end
  

----------------------------------------------------------------------
-- Update Status
----------------------------------------------------------------------
  clearWindow("ui.PlayerInfoMC")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt;&lt;b&gt;Character Status&lt;/b&gt;\n")
  hecho("ui.PlayerInfoMC", "#9f8e3d#b------------------------------------\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt; Name: &lt;white&gt;"..ui.PlayerName.."\n")
  
  -- Primary only or primary and subclass
  if psub == "None" then
    cecho("ui.PlayerInfoMC", "&lt;grey&gt;Class: &lt;sky_blue&gt;"..pclass.."\n")
  else
    cecho("ui.PlayerInfoMC", "&lt;grey&gt;Class: &lt;sky_blue&gt;"..pclass..", "..psub.."\n")
  end
  
  -- Secondary only or secondary and secondary subclass
  if sclass ~= "" and ssub ~= "" then
    cecho("ui.PlayerInfoMC", "&lt;grey&gt;      &lt;sky_blue&gt;"..sclass..", "..ssub.."\n")
  elseif sclass ~= "" then
    cecho("ui.PlayerInfoMC", "&lt;grey&gt;      &lt;sky_blue&gt;"..sclass.."\n")
  end
  
  
  cecho("ui.PlayerInfoMC", "\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt;Level: &lt;orange&gt;"..level.."\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt;  TNL: &lt;turquoise&gt;"..commaValue(NXP).."\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt; Gold: &lt;gold&gt;"..commaValue(GLD).."\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt; QPts: &lt;medium_purple&gt;"..commaValue(QPS).."\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt; HPts: &lt;lime_green&gt;"..commaValue(HPS).."\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt;MPies: &lt;tan&gt;"..commaValue(MDP).."\n")
  cecho("ui.PlayerInfoMC", "\n")
  cecho("ui.PlayerInfoMC", "&lt;grey&gt;&lt;b&gt;Timers&lt;/b&gt;\n")
  hecho("ui.PlayerInfoMC", "#9f8e3d#b------------------------------------\n")
  if QTM == "" then cecho("ui.PlayerInfoMC", "&lt;grey&gt;Quest:&lt;cyan&gt;         Available!\n")
  else cecho("ui.PlayerInfoMC", "&lt;grey&gt;Quest: &lt;white&gt;        "..QTM..questBonusTime.."\n") end
  if ETM == "" then cecho("ui.PlayerInfoMC", "&lt;grey&gt;Expedition:    &lt;cyan&gt;Available!\n")
  else cecho("ui.PlayerInfoMC", "&lt;grey&gt;Expedition:&lt;white&gt;    "..ETM..expedBonusTime.."\n") end
  if JTM == "" then cecho("ui.PlayerInfoMC", "&lt;grey&gt;Junkyard:&lt;cyan&gt;      Available!\n")
  else cecho("ui.PlayerInfoMC", "&lt;grey&gt;Junkyard:&lt;white&gt;      "..JTM.."\n") end
  if PLT == "" then cecho("ui.PlayerInfoMC", "&lt;grey&gt;Pilgrimage:&lt;cyan&gt;    Available!\n")
  else cecho("ui.PlayerInfoMC", "&lt;grey&gt;Pilgrimage:&lt;white&gt;      "..PLT.."\n") end
  if GTM == "" then cecho("ui.PlayerInfoMC", "&lt;grey&gt;GlobalQuest:&lt;cyan&gt;   Inactive!\n")
  else cecho("ui.PlayerInfoMC", "&lt;grey&gt;GlobalQuest:&lt;white&gt;   "..GTM.."\n") end
  if GTM == "" then cecho("ui.PlayerInfoMC", "&lt;grey&gt;GlobalJyard:&lt;cyan&gt;   Inactive!\n")
  else cecho("ui.PlayerInfoMC", "&lt;grey&gt;GlobalJyard:&lt;white&gt;   "..GJY.."\n") end
  cecho("ui.PlayerInfoMC", "\n")
  
  cecho("ui.PlayerInfoMC", "&lt;grey&gt;&lt;b&gt;Events&lt;/b&gt;\n")
  hecho("ui.PlayerInfoMC", "#9f8e3d#b------------------------------------\n")
  
  if (XPE ~= "" or nil) or (QPE ~= "" or nil) or (QTE ~= "" or nil) then

    if (XPE ~= "") then
      cecho("ui.PlayerInfoMC", "&lt;black:gold&gt;&lt;b&gt;     "..XpEvent.."&lt;black:gold&gt;        "..XPE.."     &lt;/b&gt;\n")
    end
     
    if (QPE ~= "") then
      cecho("ui.PlayerInfoMC", "&lt;black:gold&gt;&lt;b&gt;     2x QP:        "..QPE.."     &lt;/b&gt;\n")
    end
     
    if (QTE ~= "") then
      cecho("ui.PlayerInfoMC", "&lt;white:dark_green&gt;&lt;b&gt; No Quest Timer: "..QTE.."&lt;/b&gt; \n")
    end

  elseif ui.CurrentEvent then
    cecho("ui.PlayerInfoMC", "&lt;white:dark_green&gt; Event: &lt;b&gt;"..ui.CurrentEvent.."&lt;/b&gt; \n")
     
  else
      cecho("ui.PlayerInfoMC", "&lt;grey&gt;No Events Active.\n")
  end
    
  -- Sprites
  -- if ui.SpriteType then
    -- if ui.SpriteType == "Sunsurge" then ui.SpriteType = "&lt;yellow&gt;"..ui.SpriteType end
    -- if ui.SpriteType == "Lifestream" then ui.SpriteType = "&lt;cyan&gt;"..ui.SpriteType end
    -- if ui.SpriteType == "Earthguard" then ui.SpriteType = "&lt;green&gt;"..ui.SpriteType end
    -- if ui.SpriteType == "Windstrike" then ui.SpriteType = "&lt;sky_blue&gt;"..ui.SpriteType end
    -- cecho("ui.PlayerInfoMC", "\n")
    -- cecho("ui.PlayerInfoMC", ui.SpriteType.."&lt;white&gt; sprite! ~&lt;gold&gt;"..ui.SpriteTimer.."m")
    -- cecho("ui.PlayerInfoMC", "\n&lt;white&gt; ^-&lt;gold&gt;"..ui.SpriteLocation.."&lt;white&gt;-^&lt;reset&gt;")
  -- end
   
end

registerAnonymousEventHandler("UI_UpdateStatus", "UpdateStatus")</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>UI_UpdatePrompt Event (Bottom)</name>
        <script>-- Function to redraw Bottom Status Console UI (nil- and sanity-safe)
function UpdatePrompt(event, CHP, MHP, CMP, MMP, THP, TNM, LMP, PRE, PHP)
  -- Clear UI
  clearWindow("ui.StatusMC")

  -- Debug: print all inputs
  -- cecho("\n&lt;orange_red&gt;DEBUG UpdatePrompt inputs:\n")
  -- cecho("&lt;orange_red&gt;CHP: "..tostring(CHP)..", MHP: "..tostring(MHP)..", CMP: "..tostring(CMP)..", MMP: "..tostring(MMP).."\n")
  -- cecho("&lt;orange_red&gt;THP: "..tostring(THP)..", TNM: "..tostring(TNM)..", PHP: "..tostring(PHP).."\n")
  -- cecho("&lt;orange_red&gt;LMP: "..tostring(LMP)..", PRE: "..tostring(PRE)..", ui.lowestPetHP: "..tostring(ui.lowestPetHP).."\n")

  -- Convert digit strings to numbers safely
  CHP = safe_number(CHP, 0)
  MHP = safe_number(MHP, 1)  -- prevent divide by zero
  CMP = safe_number(CMP, 0)
  MMP = safe_number(MMP, 1)
  LMP = safe_number(LMP, 0)
  PRE = safe_string(PRE, "")
  PHP = safe_string(PHP, "")
  
  -- Colorize pet HP safely
  local php = safe_string(ColorizePetHP(), "None")

  -- Damage calculators
  local myDamage      = safe_number(gp.myDamageGiven, 0)
  local myComboDamage = safe_number(gp.myComboDamage, 0)
  local specDamage    = safe_number(gp.specDamage, 0)
  local petDamage     = safe_number(gp.currentTotalPetFightDamage, 0)
  local currentDamage = safe_number(gp.currentFightDamage, 0)
  local lastDamage    = safe_number(gp.lastFightTotalDamage, 0)

  -- Prompt Line 1: HP / MP / Limit
  cecho("ui.StatusMC", "               == [HP: ")
  local hp_frac = safe_div(CHP, MHP)
  if hp_frac &gt;= 0.66 then cecho("ui.StatusMC", "&lt;green&gt;"..CHP.."&lt;grey&gt;/")
  elseif hp_frac &gt;= 0.33 then cecho("ui.StatusMC", "&lt;yellow&gt;"..CHP.."&lt;grey&gt;/")
  else cecho("ui.StatusMC", "&lt;red&gt;"..CHP.."&lt;grey&gt;/") end
  cecho("ui.StatusMC", "&lt;green&gt;"..MHP.."&lt;grey&gt;] [MP: ")

  local mp_frac = safe_div(CMP, MMP)
  if mp_frac &gt;= 0.66 then cecho("ui.StatusMC", "&lt;cyan&gt;"..CMP.."&lt;grey&gt;/")
  elseif mp_frac &gt;= 0.33 then cecho("ui.StatusMC", "&lt;yellow&gt;"..CMP.."&lt;grey&gt;/")
  else cecho("ui.StatusMC", "&lt;red&gt;"..CMP.."&lt;grey&gt;/") end
  cecho("ui.StatusMC", "&lt;cyan&gt;"..MMP.."&lt;grey&gt;] [Limit: ")

  if LMP &gt;= 100 then
    cecho("ui.StatusMC", "&lt;purple&gt;READY!&lt;grey&gt;]")
  else
    cecho("ui.StatusMC", "&lt;purple&gt;"..LMP.."%&lt;grey&gt;]")
  end

  -- Prompt Line 1 extra info (PRE or damage)
  if PRE ~= "" then
    local pre = trim(PRE)
    local cpre = ansi2string(pre)
    if pre == trim("[&gt;pray gods&lt;]") then
      local cpre = setPrayGodsColors(cpre)
      cecho("ui.StatusMC", cpre.." &lt;grey&gt;==\n")
    else
      cecho("ui.StatusMC", " &lt;red&gt;"..cpre.." &lt;grey&gt;==\n")
    end
  else
    -- Damage
    if specDamage ~= 0 and lastDamage ~= 0 then
      cecho("ui.StatusMC", " &lt;grey&gt;[Last Fight Dmg/Sp: &lt;green&gt;"..commaValue(lastDamage).."&lt;grey&gt;/&lt;orange&gt;"..commaValue(specDamage).."&lt;grey&gt;]")
    elseif lastDamage ~= 0 then
      cecho("ui.StatusMC", " &lt;grey&gt;[Last Fight Dmg: &lt;green&gt;"..commaValue(lastDamage).."&lt;grey&gt;]")
    elseif currentDamage ~= 0 then
      cecho("ui.StatusMC", " &lt;grey&gt;[Fight Dmg: &lt;yellow&gt;"..commaValue(currentDamage).."&lt;grey&gt;]")
    end
    cecho("ui.StatusMC", " &lt;grey&gt;== \n")
  end

  -- Prompt Line 2: Target info
  local CTNM = ansi2string(TNM)
  local CTHP = THP
  if TNM == "" then
    cecho("ui.StatusMC", "&lt;grey&gt;               == [Target: &lt;white&gt;None&lt;grey&gt;] ")
  else
    cecho("ui.StatusMC", "&lt;grey&gt;               == [Target: &lt;white&gt;"..CTNM.."&lt;grey&gt; (HP: &lt;red&gt;"..CTHP.."&lt;grey&gt;) ] ")
    if myDamage ~= 0 then
      cecho("ui.StatusMC", " &lt;grey&gt;[My Dmg: &lt;yellow&gt;"..commaValue(myDamage).."&lt;grey&gt;] ")
    end
  end

  -- Prompt Line 3: Pets
  local pethp = ui.lowestPetHP
  if not pethp or type(pethp) ~= "number" or pethp ~= pethp or pethp == math.huge then
      pethp = 0
  end
  if PHP ~= "" and pethp &gt; 0 then  -- No pets, no damage display.
    cecho("ui.StatusMC", "&lt;grey&gt;==\n               == &lt;grey&gt;[Pets: &lt;white&gt;"..php.."&lt;grey&gt;]")
    if petDamage ~= 0 then
      cecho("ui.StatusMC", " &lt;grey&gt;[Pet Dmg: &lt;yellow&gt;"..commaValue(petDamage).."] ")
    end
    cecho("ui.StatusMC", "&lt;grey&gt; ==\n")
  else
    cecho("ui.StatusMC", "&lt;grey&gt;==\n")
  end

  -- HP Bar
  local hp_per = round(safe_div(CHP, MHP)*100, 0)
  hpbar:setValue(CHP, MHP)
  hpbar:setText("HP: "..hp_per.."%")

  -- MP/EN Bar
  local mp_per = round(safe_div(CMP, MMP)*100, 0)
  enbar:setValue(CMP, MMP)
  enbar:setText("MP: "..mp_per.."%")

  -- Pet HP Bar (fully sanitized)
  local pethp_max = 100
  local pethp_per = round(safe_div(pethp, pethp_max)*100, 0)
  if pethp &gt; 0 then
    -- Only show the pet HP bar if there is pet HP
    phpbar:show()
    phpbar:setValue(pethp, pethp_max)
    phpbar:setText("Pet HP: "..pethp_per.."%")
  else
    -- No pets, no pet HP bar
    phpbar:hide()
  end
  
  -- Start map capture
  -- enableTrigger("1 TEST MapCaptureStart")
  -- send("map")
  
end

registerAnonymousEventHandler("UI_UpdatePrompt", "UpdatePrompt")
</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>UI_UpdateMapName Event (Left)</name>
        <script>--Update the map information panel

function UpdateMapName (event, RNM, ANM, RMS, VNM)
  clearWindow("ui.AnsiMapNameMC")
  
  cecho("ui.AnsiMapNameMC", "&lt;b&gt;Area Map&lt;/b&gt;\n")
  hecho("ui.AnsiMapNameMC", "#9f8e3d#b---------------------------------\n")
  cecho("ui.AnsiMapNameMC", "&lt;grey&gt;Area: &lt;royal_blue&gt;"..ANM.."\n")
  cecho("ui.AnsiMapNameMC", "&lt;grey&gt;Room: &lt;royal_blue&gt;"..RNM.."\n")
  cecho("ui.AnsiMapNameMC", "&lt;grey&gt;Sector: &lt;royal_blue&gt;"..RMS.."\n")
  cecho("ui.AnsiMapNameMC", "&lt;grey&gt;VNUM: &lt;royal_blue&gt;"..VNM)
  

end

registerAnonymousEventHandler("UI_UpdateMapName", "UpdateMapName")</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>UI_ReWrap Event</name>
        <script>function Rewrap_Main ()
  setWindowWrap("main", getColumnCount("main")-1)
  debugc("Wrapping Main")
  
  local Num = getLastLineNumber("MainBuffer")

  clearWindow()
  for i = 0, Num, 1 do
    moveCursor("MainBuffer", 0, i)
    selectCurrentLine("MainBuffer")
    copy("MainBuffer")
    appendBuffer("main")
  end
  Rewrap_Chat()
end

function Rewrap_Chat ()
  setWindowWrap("ui.ChatMC", getColumnCount("ui.ChatMC")-1)
  debugc("Wrapping Chat")

  local Num = getLastLineNumber("ChatBuffer")
  
  clearWindow("ui.ChatMC")
  for i = 0, Num-1, 1 do
    moveCursor("ChatBuffer", 0, i)
    selectCurrentLine("ChatBuffer")
    copy("ChatBuffer")
    appendBuffer("ui.ChatMC")
  end
end
 

registerAnonymousEventHandler("AdjustableContainerRepositionFinish", "Rewrap_Main")</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      <Script isActive="yes" isFolder="no">
          
        <name>UI_Refresh Event</name>
        <script>-- Does a full UI refresh

function UIRefresh (event)
  InitUI()
  echo("UI Refreshed!\n")
end

registerAnonymousEventHandler("UI_Refresh", "UIRefresh")

</script>
          
        <packageName/>
        
        <eventHandlerList>
</eventHandlerList>
        
      </Script>
      
    </ScriptGroup>
    
  </ScriptPackage>
  <AliasPackage>
    <AliasGroup isActive="yes" isFolder="yes">
        
      <name>Quests</name>
      <script/>
        
      <command/>
        
      <packageName/>
        
      <regex/>
      <Alias isActive="yes" isFolder="no">
          
        <name>Runto quest area</name>
        <script>-- Alias: Rinto quest area
-- Pattern: ^rtq$
-- Description: Run to the selected area

ui = ui or {}
gp = gp or {}

if ui.questArea then
  
  -- Optional from the ErionMud Game Pack
  if gp.version then
    expandAlias("cr off")
    disableTrigger("Buffs")
  end
  
  send("recall;;runto " .. ui.questArea)  -- Most runtos are faster from recall
else
  uiCecho("&lt;orange_red&gt;Quest Area not set!")
end</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^rtq$</regex>
        
      </Alias>
      
    </AliasGroup>
    <AliasGroup isActive="yes" isFolder="yes">
        
      <name>Help</name>
      <script/>
        
      <command/>
        
      <packageName/>
        
      <regex/>
      <Alias isActive="yes" isFolder="no">
          
        <name>Help main</name>
        <script>-- Alias: Help main
-- Pattern: ^uihelp\s?$
-- Description: Show the main help file

uiHelpMain()</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uihelp\s?$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Help features</name>
        <script>-- Alias: Help features
-- Pattern: ^uihelp (f|feat|feature|features)$
-- Description: Show the features help file

uiHelpFeatures()</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uihelp (f|feat|feature|features)$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Help commands</name>
        <script>-- Alias: Help commands
-- Pattern: ^uihelp (c|cmd|cmds|com|comm|command|commands)$
-- Description: Show the commands help file

uiHelpCommands()</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uihelp (c|cmd|cmds|com|comm|command|commands)$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Help technical</name>
        <script>-- Alias: Help technical
-- Pattern: ^uihelp (t|tech|technical)$
-- Description: Show the technical help file

uiHelpTechnical()</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uihelp (t|tech|technical)$</regex>
        
      </Alias>
      
    </AliasGroup>
    <AliasGroup isActive="yes" isFolder="yes">
        
      <name>UI Commands</name>
      <script/>
        
      <command/>
        
      <packageName/>
        
      <regex/>
      <Alias isActive="yes" isFolder="no">
          
        <name>Clear console</name>
        <script>-- Name: Clear console
-- Pattern: ^uiclear\s?(\w+)?$
-- Description: Clear the given console
-- - Options: top, toptop, right, chat

ui = ui or {}

local top = ui.TopContainerMC
local toptop = ui.TopContainerMCTop
local right = ui.ChatMC

if matches[2] == "top" then
  top:clear()
  uiCecho("Top console cleared")
elseif matches[2] == "toptop" then
  toptop:clear()
  uiCecho("Top Top console cleared")
elseif (matches[2] == "right") or (matches[2] == "chat") then
  right:clear()
  uiCecho("Right console cleared")
else
  uiCecho("Usage: uiclear top|toptop|right")
end</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uiclear\s?(\w+)?$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Lock containers</name>
        <script>-- Alias: Lock containers
-- Pattern: ^uilock\s?(?&lt;con&gt;\w+)$
-- Description: Lock containers
-- - Options: all, left, top, right, bottom

ui = ui or {}

local con = matches.con

if con == "all" then
  ui.LeftContainer:lockContainer()
  ui.TopContainer:lockContainer()
  ui.RightContainer:lockContainer()
  ui.BottomContainer:lockContainer()
elseif con == "left" then
  ui.LeftContainer:lockContainer()
elseif con == "top" then
  ui.TopContainer:lockContainer()
elseif con == "right" then
  ui.RightContainer:lockContainer()
elseif con == "bottom" then
  ui.BottomContainer:lockContainer()
else
  cecho("\n&lt;orange_red&gt;Usage: uilock (left|top|right|bottom)\n")
end</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uilock\s?(?&lt;con&gt;\w+)$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Unlock containers</name>
        <script>-- Alias: Unlock containers
-- Pattern: ^(uiunlock|uiulock)\s?(?&lt;con&gt;\w+)$
-- Description: Unlock containers
-- - Options: all, left, top, right, bottom

ui = ui or {}

local con = matches.con

if con == "all" then
  ui.LeftContainer:unlockContainer()
  ui.TopContainer:unlockContainer()
  ui.RightContainer:unlockContainer()
  ui.BottomContainer:unlockContainer()
elseif con == "left" then
  ui.LeftContainer:unlockContainer()
elseif con == "top" then
  ui.TopContainer:unlockContainer()
elseif con == "right" then
  ui.RightContainer:unlockContainer()
elseif con == "bottom" then
  ui.BottomContainer:unlockContainer()
else
  cecho("\n&lt;orange_red&gt;Usage: uiunlock (left|top|right|bottom)\n")
end</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^(uiunlock|uiulock)\s?(?&lt;con&gt;\w+)$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Save containers</name>
        <script>-- Alias: Save containers
-- Pattern: ^uisave$
-- Description: Save all adjustable container states.

Adjustable.Container.saveAll("custom1")</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uisave$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Load containers</name>
        <script>-- Alias: Load containers
-- Pattern: ^uiload$
-- Description: Load all adjustable container states.

Adjustable.Container.loadAll("custom1")</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uiload$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Reset UI to default</name>
        <script>-- Alias: Reset UI to default
-- Pattern: ^uireset$
-- Description: Reset all UI containers to their default states.

Adjustable.Container.loadAll("default")</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uireset$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Set UI theme</name>
        <script>-- Alias: Set UI theme
-- Pattern: ^uitheme\s?(?&lt;theme&gt;\w+)?
-- Description: Set the UI theme

ui = ui or {}

local theme = matches.theme

if string.len(theme) == 0 then
  uiCecho("Current theme: &lt;green&gt;"..ui.CurrentThemeName)
  ShowThemes()
else
  SetTheme(theme)
end</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uitheme\s?(?&lt;theme&gt;\w+)?</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Get classes</name>
        <script>-- Alias: Get classes
-- Pattern: ^uigetclasses$
-- Description: Refresh character class variables.

uiCecho("Refreshing Class information\n")
GetClasses()</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^uigetclasses$</regex>
        
      </Alias>
      <Alias isActive="yes" isFolder="no">
          
        <name>Quit</name>
        <script>-- Alias: Quit
-- Pattern: ^(quit|qquit)$
-- Description: Intercept the "quit" command so we can run some commands before quitting.

ui = ui or {}

-- Reset the prompt on quit
uiCecho("Resetting Prompt to ALL\n")
send("prompt all", false)

if matches[2] == "qquit" then
  -- Quick Quit (quits to character menu then quits the game).
  send("quit;;q", false)
else
  send("quit", false)
end</script>
          
        <command/>
          
        <packageName/>
          
        <regex>^(quit|qquit)$</regex>
        
      </Alias>
      
    </AliasGroup>
    
  </AliasPackage>
  <TimerPackage>
</TimerPackage>
  <TriggerPackage>
    <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>At character menu</name>
      <script>-- Trigger: ^Welcome to the account menu of (.*)
-- Pattern (regex): ^Welcome to the account menu of (.*)
-- Description: Stuff to do when a character logs out.

ui = ui or {}

-- Clear status window
clearWindow("ui.PlayerInfoMC")
cecho("ui.PlayerInfoMC", "&lt;grey&gt;&lt;b&gt;Character Status&lt;/b&gt;\n")
hecho("ui.PlayerInfoMC", "#9f8e3d#b------------------------------------\n")
cecho("ui.PlayerInfoMC", "\n\n&lt;white&gt;       Waiting for \n  character information...\n")

-- Clear any previous character variables
ui.PlayerName = nil
ui.ActiveClass = nil
ui.ActiveClassLevel = nil
ui.PClass = nil
ui.PSubclass = nil
ui.SecClass = nil
ui.SecSubclass = nil
</script>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path/>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
        
        <string>^Welcome to the account menu of (.*)</string>
      </regexCodeList>
      <regexCodePropertyList>
        
        <integer>1</integer>
      </regexCodePropertyList>
      
    </Trigger>
    <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Changing class target</name>
      <script>-- Trigger: Changing class target
-- Pattern (regex): ^You are now targeting the (?&lt;class&gt;\w+) class
-- Pattern (regex): ^You are now targeting the (?&lt;class&gt;\w+) subclass
-- Pattern (regex): ^Congratulations\! You have added the (?&lt;class&gt;.*) subclass\!
-- Description: Update the active class when "class target" is used

ui = ui or {}

ui.ActiveClass = matches.class
GetClasses()
UpdateStatus()</script>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path/>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
        
        <string>^You are now targeting the (?&lt;class&gt;\w+) class</string>
        
        <string>^You are now targeting the (?&lt;class&gt;\w+) subclass</string>
        
        <string>^Congratulations\! You have added the (?&lt;class&gt;.*) subclass\!</string>
        
        <string>^You switch into the (&lt;class&gt;.*) subclass</string>
      </regexCodeList>
      <regexCodePropertyList>
        
        <integer>1</integer>
        
        <integer>1</integer>
        
        <integer>1</integer>
        
        <integer>1</integer>
      </regexCodePropertyList>
      
    </Trigger>
    <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Level up</name>
      <script>-- Trigger: Level up
-- Pattern (regex): ^You are now a level (\d+) (\w+)\!\!$
-- Pattern (regex): ^You raise a faux level
-- Description: Update stuff when you level (a placeholder for things to come)

selectCurrentLine()
setBgColor(0,80,0)

tempTimer(5, function() GetClasses() end)</script>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path/>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
        
        <string>^You are now a level (\d+) (\w+)\!\!$</string>
        
        <string>^You raise a faux level</string>
      </regexCodeList>
      <regexCodePropertyList>
        
        <integer>1</integer>
        
        <integer>1</integer>
      </regexCodePropertyList>
      
    </Trigger>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>ANSI Map Capture</name>
      <script/>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>ANSI Map Capture</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Map Trigger (Border)</name>
        <script>-- Trigger: Map Trigger (Border)
-- Pattern (regex): (^\+-{9}\+\s{2})

ui = ui or {}

if CMap == 0 then
  ui.AnsiMapMC:clear()
  selectCaptureGroup(1)
  setBgColor(unpack(ui.BgColorRGB))
  copy()
  ui.AnsiMapMC:appendBuffer()
  replace()
  
  CMap = 1
else
  selectCaptureGroup(1)
  setBgColor(unpack(ui.BgColorRGB))
  copy()
  ui.AnsiMapMC:appendBuffer()
  replace()
  CMap = 2
end

if CMap == 2 then
  CMap = 0
end
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>ANSI Map Capture</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>(^\+-{9}\+\s{2})</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Map Trigger (Map)</name>
        <script>-- Trigger: Map Trigger (Map)
-- Pattern (regex): (^\|.{9}\|\s{2})

ui = ui or {}

selectCaptureGroup(1)
setBgColor(unpack(ui.BgColorRGB))
copy()
ui.AnsiMapMC:appendBuffer()
replace("")
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>ANSI Map Capture</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>(^\|.{9}\|\s{2})</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Map Cleaner</name>
        <script>-- Trigger: Map Cleaner
-- Pattern (regex): (^ {13})(!C|-)
-- Description: Removes the 13 blank spaces from under the map, bringing the rest of the room description to the left.
--              The "C" and "-" filters prevent the "TRAIN" output from being affected.

selectCaptureGroup(1)
replace("")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>ANSI Map Capture</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>(^ {13})(!C|-)</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Map Spacer</name>
        <script>-- Trigger: Map Spacer
-- Pattern (regex): (\(Id .+[^)]\))

echo("\n  ")
selectCaptureGroup(1)
replace("")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>ANSI Map Capture</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>(\(Id .+[^)]\))</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Data Captures</name>
      <script/>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>Data Captures</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>ChatCapture</name>
        <script>-- Trigger: ChatCapture
-- Pattern: Various
-- Description: Move all chat text to the Chat buffer and window.

selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))

-- Set some custom colors
if matches[1] == "[mudlet]" then
  setFgColor(255,170,0)
end

if matches[1] == "[secrets]" then
  setFgColor(170, 85, 255)
end

if matches[1] == "(Gtell):" then
  setFgColor(255,0,255)
end

copy()
setBgColor(0,0,0)  -- Reset background color to black
deleteLine() --Remove Captured Line (Comment out to disable)


moveCursorEnd("MainBuffer")
selectCurrentLine("MainBuffer")
deleteLine("MainBuffer")

moveCursorUp(2)
--selectCurrentLine()

for i = 1, 3, 1 do
  if getCurrentLine() == "" then
    --debugc("Deleted: "..getCurrentLine())
    deleteLine()
  end
  moveCursorDown()
  selectCurrentLine()
end

appendBuffer("ui.ChatMC")
appendBuffer("ChatBuffer")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\[chat\]</string>
          
          <string>^\[newbie\]</string>
          
          <string>^\[grats\]</string>
          
          <string>^\[music\]</string>
          
          <string>^\[quote\]</string>
          
          <string>^\[roleplay\]</string>
          
          <string>^\[client\]</string>
          
          <string>^\[Newbies\]</string>
          
          <string>^\[Class\]</string>
          
          <string>^\[COLOSSEUM\]</string>
          
          <string>^\[Healers\]</string>
          
          <string>^(.*) tells you\,</string>
          
          <string>^(.*) replies to you\,</string>
          
          <string>^(\[Fighting\])?\s?You tell</string>
          
          <string>^\[secrets\]</string>
          
          <string>^(\[Fighting\])?\s?You reply</string>
          
          <string>^\(Friend\)</string>
          
          <string>^\[faith\]</string>
          
          <string>^\[Slayers\]</string>
          
          <string>^\&lt;\[trivia\]\&gt;</string>
          
          <string>^\[trivia\]</string>
          
          <string>^\&lt;\[secrets\]\&gt;</string>
          
          <string>^\&lt;\[stream\]\&gt;</string>
          
          <string>^\[stream\]</string>
          
          <string>^\(Reply\)</string>
          
          <string>^\[Artisans\]</string>
          
          <string>^\[barter\]</string>
          
          <string>^\[Alchemist\]</string>
          
          <string>^\[Chaos\]</string>
          
          <string>^\[Doom\]</string>
          
          <string>^\[Luminati\]</string>
          
          <string>\[Sacellum\]</string>
          
          <string>^\&lt;\[faith\]\&gt;</string>
          
          <string>^Auction\:</string>
          
          <string>^\[Auction\]</string>
          
          <string>^\(Gtell\)\:</string>
          
          <string>^\&lt;ghouse\&gt;</string>
          
          <string>^\[CRIMSON KEEP\]</string>
          
          <string>^\[mudlet\]</string>
          
          <string>^\[flame\]</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>ChatCaptureOther</name>
        <script>-- Trigger: ChatCaptureOther
-- Pattern: Various
-- Description: More stuff to move to the Chat buffer and window.

selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
copy()
setBgColor(0,0,0)  -- Reset background color to black
deleteLine() --Remove Captured Line (Comment out to disable)


moveCursorEnd("MainBuffer")
selectCurrentLine("MainBuffer")
deleteLine("MainBuffer")

moveCursorUp(2)
--selectCurrentLine()

for i = 1, 3, 1 do
  if getCurrentLine() == "" then
    --debugc("Deleted: "..getCurrentLine())
    deleteLine()
  end
  moveCursorDown()
  selectCurrentLine()
end

appendBuffer("ui.ChatMC")
appendBuffer("ChatBuffer")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\[Levels\]</string>
          
          <string>^\[Global Quest\]</string>
          
          <string>^\[Logout\]</string>
          
          <string>^\[Login\]</string>
          
          <string>^\[Rankings\]</string>
          
          <string>^\[Suicides\]</string>
          
          <string>^\[Player Deaths\]</string>
          
          <string>^\[NEW Player\]</string>
          
          <string>^\[Returned\]</string>
          
          <string>^\[Junkyard\]</string>
          
          <string>^\[LEGEND\]</string>
          
          <string>^RESTART\:</string>
          
          <string>^REBIRTH\:</string>
          
          <string>^\[Achievement\]</string>
          
          <string>^\[SCRAMBLE\]</string>
          
          <string>^The scrambled phrase is\:</string>
          
          <string>^\[Quest\]</string>
          
          <string>^\[Global Junkyard\]</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>ChatCaptureNoDelete</name>
        <script>-- Trigger: ChatCaptureNoDelete
-- Pattern: Various
-- Description: Copy other text to the Chat buffer and window, also leaving ti in the main window.

selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
copy()
-- if string.find(matches[1], "QUEST") or 
   -- string.find(matches[1], "EXPEDITION") then
  -- if ui.onExpedition ~= true or ui.onQuest ~= true then
    -- ui.TopContainerMC:clear()
    -- ui.TopContainerMC:appendBuffer()
    -- tempTimer(60, function() ui.TopContainerMC:clear() end)
  -- end
-- end

setBgColor(0,0,0)  -- Reset background color to black
--deleteLine() --Remove Captured Line (Comment out to disable)


moveCursorEnd("MainBuffer")
selectCurrentLine("MainBuffer")
deleteLine("MainBuffer")

moveCursorUp(2)
--selectCurrentLine()

for i = 1, 3, 1 do
  if getCurrentLine() == "" then
    --debugc("Deleted: "..getCurrentLine())
    deleteLine()
  end
  moveCursorDown()
  selectCurrentLine()
end

appendBuffer("ui.ChatMC")
appendBuffer("ChatBuffer")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\[GUESS\]</string>
          
          <string>^The phrase is</string>
          
          <string>^\[Expedition\]</string>
          
          <string>^Your personal Guess the Phrase is</string>
          
          <string>^Achievement Unlocked \-\&gt;</string>
          
          <string>^QUEST\:</string>
          
          <string>^EXPEDITION\:</string>
          
          <string>^JUNKYARD\:</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>CopytoBuffer</name>
        <script>  -- Trigger: CopyToBuffer
  -- Pattern (regex): ^
  -- Description: Copies every single line to the MainBuffer.
  
  selectCurrentLine()
  copy()
  appendBuffer("MainBuffer")
  </script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>ExitsCapture</name>
        <script>-- Trigger: ExitsCapture
-- Pattern (regex): ^\[Exits\:\s(.*)\]

map = map or {}  -- From generic_mapper

if map.prompt then
  map.prompt.exits = matches[2]
end

clearWindow("ui.ExitsMC")
selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
copy()
ui.ExitsMC:appendBuffer()
replaceLine("")

-- ui.mapReady = false
-- cecho("\n&lt;orange_red&gt;[DEBUG]: Exits trigger fired → mapReady reset to false\n")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\[Exits\:\s(.*)\]</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>PlayerCapture</name>
        <script>-- Trigger: PlayerCapture
-- Pattern (regex): ^Logging in as (\w+)\.
-- Description: Capture the active player name on log in.

ui = ui or {}

if (ui.PlayerName ~= matches[2]) or (ui.PlayerName == nil) or (ui.PlayerName == "") then
  ui.PlayerName = matches[2]
  tempTimer(0.5, function() send("look", false) end)
end

-- Send/Resend Mud Settings (toggles, prompts, etc.)
-- echo("\n")
uiCecho("Updating prompt and toggles")
raiseEvent("SetDefaultMudSettings")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^Logging in as (\w+)\.</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>PromptCapture</name>
        <script>-- Trigger: PromptCapture
-- Pattern (regex): ^(?'PRE'[^#]+|)#1(?'CHP'[^#]+|)#2(?'MHP'[^#]+|)#3(?'CMP'[^#]+|)#4(?'MMP'[^#]+|)#5(?'THP'[^#]+|)#6(?'TNM'[^#]+|)#7(?'CXP'[^#]+|)#8(?'NXP'[^#]+|)#9(?'GLD'[^#]+|)#10(?'QPS'[^#]+|)#11(?'HPS'[^#]+|)#12(?'RNM'[^#]+|)#13(?'EXT'[^#]+|)#14(?'LVL'[^#]+|)#15(?'FLV'[^#]+|)#16(?'LMP'[^#]+|)#17(?'ANM'[^#]+|)#18(?'RMS'[^#]+|)#19(?'VNM'[^#]+|)#20(?'QTM'[^#]+|)#21(?'ETM'[^#]+|)#22(?'GTM'[^#]+|)#23(?'JTM'[^#]+|)#24(?'XPE'[^#]+|)#25(?'QPE'[^#]+|)#26(?'QTE'[^#]+|)#27(?'MDP'[^#]+|)#28(?'PHP'[^#]+|)#29(?'PLT'[^#]+|)#30(?'GJY'[^#]+|)#
-- Capture all variables from the custom prompt (@Caelinus: this is pure genius)

ui = ui or {}
gp = gp or {}

local CHP = matches.CHP
local MHP = matches.MHP
local CMP = matches.CMP
local MMP = matches.MMP
local THP = matches.THP
local TNM = matches.TNM
local CXP = matches.CXP
local NXP = matches.NXP
local GLD = matches.GLD
local QPS = matches.QPS
local HPS = matches.HPS
local RNM = matches.RNM
local EXT = matches.EXT
local LVL = matches.LVL
local FLV = matches.FLV
local LMP = matches.LMP
local ANM = matches.ANM
local RMS = matches.RMS
local VNM = matches.VNM
local QTM = matches.QTM
local ETM = matches.ETM
local GTM = matches.GTM
local JTM = matches.JTM
local XPE = matches.XPE
local QPE = matches.QPE
local QTE = matches.QTE
local MDP = matches.MDP
local PHP = matches.PHP
local PRE = matches.PRE
local PLT = matches.PLT
local GJY = matches.GJY

selectCurrentLine()
deleteLine()

moveCursor("MainBuffer", 0, getLastLineNumber("MainBuffer")-2)
deleteLine("MainBuffer")
deleteLine("MainBuffer")

-- Globalize variables for later use
ui.RoomVNUM = ""
ui.RoomVNUM = VNM
ui.PetsHP = PHP
ui.TargetName = TNM or ""

-- Are we fighting?
ui.hasTarget = false
if string.len(ui.TargetName) ~= 0 then
  ui.hasTarget = true
end

-- Clear special entrances
if gp.specialEntrance then
  gp.specialEntrance = nil
end

-- Send map so it can be captured for the UI.
-- "toggle -map" needs to be set in the MUD. (No in-line map output).
-- if not ui.mapRequested and not ui.mapCapturing and not ui.mapReady then
  -- ui.mapRequested = true
  -- cecho("\n&lt;orange_red&gt;[DEBUG]: mapRequested set true in PromptCapture\n")
  -- enableTrigger("1 TEST MapCaptureStart")
  -- send("map")
-- else
  -- cecho(string.format(
    -- "\n&lt;orange_red&gt;[DEBUG]: PromptCapture skipped, mapRequested=%s, mapCapturing=%s, mapReady=%s\n",
    -- tostring(ui.mapRequested), tostring(ui.mapCapturing), tostring(ui.mapReady)
  -- ))
-- end


-- raiseEvent("onNewRoom")  -- Trigger the mapper
raiseEvent("UI_UpdateStatus", LVL, FLV, NXP, GLD, QPS, HPS, MDP, QTM, ETM, GTM, JTM, XPE, QPE, QTE, PLT, GJY) 
raiseEvent("UI_UpdatePrompt", CHP, MHP, CMP, MMP, THP, TNM, LMP, PRE, PHP) 
raiseEvent("UI_UpdateMapName", RNM, ANM, RMS, VNM)

-- old prompt #1%h#2%H#3%m#4%M#5%p#6%T#7%x#8%X#9%g#10%C#11%u#12%r#13%e#14%L#15%I#16%n#17%B#18%S#19%R#20%f#21%F#22%J#23%j#24%G#25%k#26%K#27%N#28%P#29%Z#
-- old regex = ^(?'PRE'[^#]+|)#1(?'CHP'[^#]+|)#2(?'MHP'[^#]+|)#3(?'CMP'[^#]+|)#4(?'MMP'[^#]+|)#5(?'THP'[^#]+|)#6(?'TNM'[^#]+|)#7(?'CXP'[^#]+|)#8(?'NXP'[^#]+|)#9(?'GLD'[^#]+|)#10(?'QPS'[^#]+|)#11(?'HPS'[^#]+|)#12(?'RNM'[^#]+|)#13(?'EXT'[^#]+|)#14(?'LVL'[^#]+|)#15(?'FLV'[^#]+|)#16(?'LMP'[^#]+|)#17(?'ANM'[^#]+|)#18(?'RMS'[^#]+|)#19(?'VNM'[^#]+|)#20(?'QTM'[^#]+|)#21(?'ETM'[^#]+|)#22(?'GTM'[^#]+|)#23(?'JTM'[^#]+|)#24(?'XPE'[^#]+|)#25(?'QPE'[^#]+|)#26(?'QTE'[^#]+|)#27(?'MDP'[^#]+|)#28(?'PHP'[^#]+)#29(?'PLT'[^#]+)#

-- Added Global Junkyard
-- new prompt #1%h#2%H#3%m#4%M#5%p#6%T#7%x#8%X#9%g#10%C#11%u#12%r#13%e#14%L#15%I#16%n#17%B#18%S#19%R#20%f#21%F#22%J#23%j#24%G#25%k#26%K#27%N#28%P#29%Z#30%V#
-- new regex = ^(?'PRE'[^#]+|)#1(?'CHP'[^#]+|)#2(?'MHP'[^#]+|)#3(?'CMP'[^#]+|)#4(?'MMP'[^#]+|)#5(?'THP'[^#]+|)#6(?'TNM'[^#]+|)#7(?'CXP'[^#]+|)#8(?'NXP'[^#]+|)#9(?'GLD'[^#]+|)#10(?'QPS'[^#]+|)#11(?'HPS'[^#]+|)#12(?'RNM'[^#]+|)#13(?'EXT'[^#]+|)#14(?'LVL'[^#]+|)#15(?'FLV'[^#]+|)#16(?'LMP'[^#]+|)#17(?'ANM'[^#]+|)#18(?'RMS'[^#]+|)#19(?'VNM'[^#]+|)#20(?'QTM'[^#]+|)#21(?'ETM'[^#]+|)#22(?'GTM'[^#]+|)#23(?'JTM'[^#]+|)#24(?'XPE'[^#]+|)#25(?'QPE'[^#]+|)#26(?'QTE'[^#]+|)#27(?'MDP'[^#]+|)#28(?'PHP'[^#]+|)#29(?'PLT'[^#]+|)#30(?'GJY'[^#]+|)#

--[[
1:Current HP = CHP
2:Max Hp = MHP
3:Current Mana = MCP
4:Max Mana = MMP
5:Target Health = THP
6:Target Name = TNM
7:Current EXP = CXP
8:XP to next = NXP
9:Gold = GLD
10:Quest Points = QPS
11:House Points = HPS
12:Room Name = RNM
13:Exits = EXT
14:Level = LVL
15:Faux Level = FLV
16:Limit Percent = LMP
17:Area Name = ANM
18:Room Sector = RMS
19:Room VNum = VNM
20:Quest Timer = QTM
21:Expedition Timer = ETM
22:Global Quest = GTM
23:Junkyard Timer = JTM
24:EXP Event = XPE
25:QP Event = QPE
26:Quest Timer Event = QTE
27:MudPies = MDP
28:Pet HP = PHP
29:Pigrimage Timer = PLT
30:Global Junkyard = GJY
00:PromptPrefix = PRE
--]]</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^(?'PRE'[^#]+|)#1(?'CHP'[^#]+|)#2(?'MHP'[^#]+|)#3(?'CMP'[^#]+|)#4(?'MMP'[^#]+|)#5(?'THP'[^#]+|)#6(?'TNM'[^#]+|)#7(?'CXP'[^#]+|)#8(?'NXP'[^#]+|)#9(?'GLD'[^#]+|)#10(?'QPS'[^#]+|)#11(?'HPS'[^#]+|)#12(?'RNM'[^#]+|)#13(?'EXT'[^#]+|)#14(?'LVL'[^#]+|)#15(?'FLV'[^#]+|)#16(?'LMP'[^#]+|)#17(?'ANM'[^#]+|)#18(?'RMS'[^#]+|)#19(?'VNM'[^#]+|)#20(?'QTM'[^#]+|)#21(?'ETM'[^#]+|)#22(?'GTM'[^#]+|)#23(?'JTM'[^#]+|)#24(?'XPE'[^#]+|)#25(?'QPE'[^#]+|)#26(?'QTE'[^#]+|)#27(?'MDP'[^#]+|)#28(?'PHP'[^#]+|)#29(?'PLT'[^#]+|)#30(?'GJY'[^#]+|)#</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="no" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>ScoreCaptureStart</name>
        <script>-- Trigger: ScoreCaptureStart
-- Regex: ^\+-{70,}\+$   (matches top/bottom border lines with 70+ dashes)
-- Description: (Default State: OFF) This trigger is enabled by: Scripts/ErionMud-UI/UI Functions/
-- - SilentScoreCapture() and GetClasses()

ui = ui or {}
if not ui.scoreInProgress then return end

if not ui.scoreStartLine then
  ui.scoreStartLine = getLineNumber()
end
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>1</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Data Captures</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\+-{70,}\+$</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Expeditions</name>
      <script/>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>Expeditions\Exped Target Capture</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Exped Target Capture</name>
        <script/>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Expeditions\Exped Target Capture</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
</regexCodeList>
        <regexCodePropertyList>
</regexCodePropertyList>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>1 Expedition targets start</name>
          <script>-- Trigger: 1 Expedition targets start
-- Pattern (substring): -------------------[ Expedition Targets ]-------------------
-- Description: Start capturing expedition targets.

ui = ui or {}

ui.eTargets = {}
ui.capturingExpedTargets = true
ui.onExpedition = true

-- Optional stuff from the ErionMud GamePack
if gp.version then
  disableTrigger("Buffs")
  expandAlias("cr off")
end</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Expeditions\Exped Target Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>-------------------[ Expedition Targets ]-------------------</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>0</integer>
          </regexCodePropertyList>
          
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>2 Expedition targets capture</name>
          <script>-- Trigger: 2 Expedition targets capture
-- Pattern (regex): ^Find and (kill|spar with) (?&lt;target&gt;.*) in (?&lt;area&gt;.*)\.
-- Description: Capture all lines with the given prefix and write them to a table with color.

ui = ui or {}

if ui.capturingExpedTargets then
  local t = ("&lt;green&gt;"..matches.target.." &lt;white&gt;in &lt;yellow&gt;"..matches.area)
  table.insert(ui.eTargets, t)
end</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Expeditions\Exped Target Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>^Find and (kill|spar with) (?&lt;target&gt;.*) in (?&lt;area&gt;.*)\.</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>1</integer>
          </regexCodePropertyList>
          
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>3 Expedition bonus timer</name>
          <script>-- Trigger: 3 Expedition bonus timer
-- Pattern (regex): ^Finish the expedition in under (?&lt;min&gt;\d+) minutes and (?&lt;sec&gt;\d+) seconds for a bonus reward
-- Pattern (regex): ^Finish the expedition in under (?&lt;min&gt;\d+) minutes for a bonus reward
-- Description: Create an expedition bonus timer.

ui = ui or {}

ui.expedBonusTimerMin = matches.min
ui.expedBonusTimerSec = matches.sec or 0
ui.expedBonusTimerTotal = ((matches.min * 60) + matches.sec)
ui.expedBonusTimer = tempTimer(ui.expedBonusTimerTotal, function() ui.expedBonusTimer = "0" end)</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Expeditions\Exped Target Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>^Finish the expedition in under (?&lt;min&gt;\d+) minutes and (?&lt;sec&gt;\d+) seconds for a bonus reward</string>
            
            <string>^Finish the expedition in under (?&lt;min&gt;\d+) minutes for a bonus reward</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>1</integer>
            
            <integer>1</integer>
          </regexCodePropertyList>
          
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>4 Expedition targets end</name>
          <script>-- Trigger: 4 Expedition targets end
-- Pattern (substring): ------------------------------------------------------------
-- Description: Write target and area to the top console in 2 rows.

ui = ui or {}

if ui.capturingExpedTargets then
  ui.capturingExpedTargets = false
  
  -- Clear the header and footer if it was captured
  if ui.eTargets == "-------------------[ Expedition Targets ]-------------------" then
    table.remove(eTargets, 1)  -- Pop the first entry
  end
  if ui.eTargets == "------------------------------------------------------------" then
    table.remove(eTargets, #eTargets)  -- Pop the last entry
  end
    
  ui.TopContainerMC:clear()
  ui.TopContainerMC:cecho("&lt;orange_red&gt;EXPEDITION!---------------------------------------------------------------------------\n")
  
  for i = 1, #ui.eTargets, 2 do
    local first = ui.eTargets[i] or ""
    local second = ui.eTargets[i + 1] or ""
    ui.TopContainerMC:cecho(string.format("%-65s %s\n", first, second))  -- string.format adds spacing.
  end
end</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Expeditions\Exped Target Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>------------------------------------------------------------</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>0</integer>
          </regexCodePropertyList>
          
        </Trigger>
        
      </TriggerGroup>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Expedition progress</name>
        <script>-- Trigger: Expedition progress
-- Pattern (regex): ^You have completed a part of your EXPEDITION
-- Pattern (regex): ^You have almost (?&lt;comp&gt;\w+) your EXPEDITION
-- Description: Updates the top console that all targets have been eliminated.


ui = ui or {}

if matches.comp then
  ui.TopContainerMC:clear()
  ui.TopContainerMC:cecho("&lt;orange_red&gt;EXPEDITION!---------------------------------------------------------------------------\n")
  ui.TopContainerMC:cecho("&lt;green&gt;Complete! Return to the Expedition Giver!\n")
else
  send("expedition info")
end</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Expeditions</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You have completed a part of your EXPEDITION</string>
          
          <string>^You have almost (?&lt;comp&gt;\w+) your EXPEDITION</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Expedition end</name>
        <script>-- Trigger: Expedition end
-- Pattern (regex): ^You inform (.*) you have completed (\w+) expedition
-- Pattern (regex): ^You have failed your expedition
-- Description: Updates top console and kill timer when expedition is not active.

ui = ui or {}

ui.TopContainerMC:clear()
killTimer(ui.expedBonusTimer)
ui.expedBonusTimer = "0"

-- Optional stuff from the ErionMud GamePack
if gp.version then
  cecho("\n&lt;orange_red&gt;Buff trigger activated")
  enableTrigger("Buffs")
  expandAlias("cr on")
end</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Expeditions</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You inform (.*) you have completed (\w+) expedition</string>
          
          <string>^You have failed your expedition</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Junkyards</name>
      <script/>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>Junkyards</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>1 Junkyard objects start</name>
        <script>-- Trigger: 1 Junkyard objects start
-- Pattern (regex): ^You ask The Giver for a junkyard quest
-- Pattern (regex): ^You have (\d+) minutes left to gather\:
-- Pattern (regex): ^You have (\d+) minutes and (\d+) seconds left to gather\:
-- Pattern (regex): ^You have (\d+) hour (\d+) minutes and (\d+) seconds left to gather\:

ui = ui or {}

ui.junkyardObjects = {}
ui.capturingJunkyardObjects = true
ui.onJunkyard = true
enableTrigger("2 Junkyard object capture")

-- Use a timer to disable the capture since we do not have an ending string.
tempTimer(2, function() 
  disableTrigger("2 Junkyard object capture")
  ui.capturingJunkyardObjects = false
  
  -- Display the objects in the top console
  ui.TopContainerMC:clear()
  ui.TopContainerMC:cecho("&lt;orange_red&gt;JUNKYARD!---------------------------------------------------------------------------\n")
  
  for i = 1, #ui.junkyardObjects, 1 do
    -- local first = ui.junkyardObjects[i] or ""
    -- local second = ui.junkyardObjects[i + 1] or ""
    -- ui.TopContainerMC:cecho(string.format("%-65s %s\n", first, second))  -- string.format adds spacing.
    ui.TopContainerMC:cecho(ui.junkyardObjects[i].."\n")
  end
end)
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Junkyards</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You ask The Giver for a junkyard quest</string>
          
          <string>^You have (\d+) minutes left to gather\:</string>
          
          <string>^You have (\d+) minutes and (\d+) seconds left to gather\:</string>
          
          <string>^You have (\d+) hour (\d+) minutes and (\d+) seconds left to gather\:</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>2 Junkyard object capture</name>
        <script>-- Trigger: 2 Junkyard object capture
-- Pattern (regex): \[\s*(?&lt;num&gt;\d+)\]\s+(?&lt;item&gt;.+?)\s+in\s+(?&lt;room&gt;.*?)\s+in\s+(?&lt;area&gt;.*)
-- Description: Capture all junkyard targets

ui = ui or {}

local num = matches.num
local item = matches.item
local room = matches.room
local area = matches.area

if ui.capturingJunkyardObjects then
  if string.find(area, "here") then
    area = string.sub(area, 1, -7)
    area = area.."&lt;red&gt;(here)"
  end
  local t = "&lt;white&gt;"..num..": &lt;green&gt;"..item.."&lt;gray&gt; in &lt;yellow&gt;"..room.."&lt;gray&gt; in &lt;cyan&gt;"..area
  table.insert(ui.junkyardObjects, t)
end
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Junkyards</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>\[\s*(?&lt;num&gt;\d+)\]\s+(?&lt;item&gt;.+?)\s+in\s+(?&lt;room&gt;.*?)\s+in\s+(?&lt;area&gt;.*)</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Junkyard progress</name>
        <script>-- Trigger: Junkyard progress
-- Pattern (regex): ^You have (?&lt;almost&gt;\w+) completed your JUNKYARD
-- Pattern (regex): ^You add another piece of (?&lt;trash&gt;\w+) to your junkyard box

ui = ui or {}

if matches.trash then
  send("junkyard info")
end

if matches.almost then
  ui.TopContainerMC:cecho("&lt;orange_red&gt;JUNKYARD!---------------------------------------------------------------------------\n")
  ui.TopContainerMC:cecho("&lt;green&gt;Complete! Return to the Expedition Giver!\n")
end</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Junkyards</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You have (?&lt;almost&gt;\w+) completed your JUNKYARD</string>
          
          <string>^You add another piece of (?&lt;trash&gt;\w+) to your junkyard box</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Junkyard end</name>
        <script>-- Trigger: Junkyard end
-- Pattern (regex): ^You inform The Giver you have finished eliminating hazardous remnants from the world
-- Pattern (regex): ^You have failed your junkyard quest

ui = ui or {}

ui.TopContainerMC:clear()
ui.onJunkyard = false</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Junkyards</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You inform The Giver you have finished eliminating hazardous remnants from the world</string>
          
          <string>^You have failed your junkyard quest</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Junkyard rewards</name>
        <script>-- Trigger: Junkyard rewards
-- Pattern (regex): ^(.*) says to you\, \'Your reward is (?&lt;exp&gt;\d+) experience and (?&lt;gold&gt;\d+) gold\!\'$

ui = ui or {}

if matches.exp then
  echo("\n\n")
  uiCecho("&lt;gold&gt;**************\n")
  uiCecho("&lt;green&gt;  EXP: " .. commaValue((tonumber(matches.exp))).."\n")
  uiCecho("&lt;yellow&gt; Gold: " .. commaValue((tonumber(matches.gold))).."\n")
  uiCecho("&lt;gold&gt;**************\n\n")
end

if matches.qps then
  echo("\n\n")
  uiCecho("&lt;gold&gt;**************\n")
  uiCecho("&lt;green&gt;  QPs: " .. commaValue((tonumber(matches.qps))).."\n")
  uiCecho("&lt;yellow&gt; Gold: " .. commaValue((tonumber(matches.gold))).."\n")
  uiCecho("&lt;gold&gt;**************\n\n")
end</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Junkyards</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^(.*) says to you\, \'Your reward is (?&lt;exp&gt;\d+) experience and (?&lt;gold&gt;\d+) gold\!\'$</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Mud events</name>
      <script>-- Trigger: Mud Events
-- Pattern: Various
-- Description: Capture MUD events and send them in the top and right containers

--[[
Example: &lt;[mudevent]&gt; Experience gains from 2000 Monster Deaths will end in 2 minutes!
&lt;&lt;&lt; &lt;PLAYER&gt; has killed the 2000th monster! 2x EXP +30 Minutes! &gt;&gt;&gt;
For the next 30 minutes, experience is quadrupled

]]

ui = ui or {}

-- Try to figure out how much of an EXP boost we're getting
local expGain2kStarted = "2000th monster"
local expGain2k = "Experience gains from 2000 Monster Deaths will end"
local expGain2kEnded = "Experience gains from 2000 Monster Deaths have ended"
local expGain4k = "quadrupled"

-- 2X EXP events
if string.find(matches.event, expGain2k) or 
  string.find(matches.event, expGain2kStarted) then
  ui.Exp2k = true
end
if string.find(matches.event, expGain2kEnded) then
  ui.Exp2k = false
  tempTimer(60, [[ ui.TopContainerMCTop:clear() ]])
end

-- 4X EXP events
if string.find(matches.event, expGain4k) then
  ui.Exp4k = true
else
  ui.Exp4k = false
  tempTimer(60, [[ ui.TopContainerMCTop:clear() ]])
end


selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
copy()
ui.TopContainerMCTop:clear()
ui.TopContainerMCTop:appendBuffer()
deleteLine() --Remove Captured Line (Comment out to disable)
cecho("\n&lt;black:dark_goldenrod&gt;&lt;b&gt;"..matches[1].."&lt;/b&gt;\n\n")

-- Clear the line from the top container after some time
--tempTimer(10, function() ui.TopContainerMC:clear() end)

moveCursorEnd("MainBuffer")
selectCurrentLine("MainBuffer")
deleteLine("MainBuffer")

moveCursorUp(2)
--selectCurrentLine()

for i = 1, 3, 1 do
  if getCurrentLine() == "" then
    --debugc("Deleted: "..getCurrentLine())
    deleteLine()
  end
  moveCursorDown()
  selectCurrentLine()
end


appendBuffer("ui.ChatMC")
appendBuffer("ChatBuffer")</script>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>Mud events</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Mud Announcements</name>
        <script>-- Trigger: Mud Announcements
-- Pattern (regex): \&lt;\[announce\]\&gt; (.*)
-- Pattern (regex): ^A Legend has been born\!
-- Description: Capture MUD announcements and send them to the chat and top windows.

ui = ui or {}

selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
copy()
ui.TopContainerMCTop:clear()
ui.TopContainerMCTop:appendBuffer()
deleteLine() --Remove Captured Line (Comment out to disable)
cecho("\n&lt;black:goldenrod&gt;&lt;b&gt;" .. matches[1] .. "&lt;/b&gt;\n\n")

-- Clear the line from the top container after some time
--tempTimer(10, function() ui.TopContainerMC:clear() end)

moveCursorEnd("MainBuffer")
selectCurrentLine("MainBuffer")
deleteLine("MainBuffer")

moveCursorUp(2)
--selectCurrentLine()

for i = 1, 3, 1 do
  if getCurrentLine() == "" then
    --debugc("Deleted: "..getCurrentLine())
    deleteLine()
  end
  moveCursorDown()
  selectCurrentLine()
end


appendBuffer("ui.ChatMC")
appendBuffer("ChatBuffer")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Mud events</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>\&lt;\[announce\]\&gt; (.*)</string>
          
          <string>^A Legend has been born\!</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Mud Events</name>
        <script>-- Trigger: Mud Events
-- Pattern: Various
-- Description: Capture MUD events and send them in the top and right containers

--[[
Example: &lt;[mudevent]&gt; Experience gains from 2000 Monster Deaths will end in 2 minutes!
&lt;&lt;&lt; &lt;PLAYER&gt; has killed the 2000th monster! 2x EXP +30 Minutes! &gt;&gt;&gt;
For the next 30 minutes, experience is quadrupled

]]

ui = ui or {}

-- Try to figure out how much of an EXP boost we're getting
local expGain2kStarted = "2000th monster"
local expGain2k = "Experience gains from 2000 Monster Deaths will end"
local expGain2kEnded = "Experience gains from 2000 Monster Deaths have ended"
local expGain4k = "quadrupled"

-- 2X EXP events
if string.find(matches.event, expGain2k) or 
  string.find(matches.event, expGain2kStarted) then
  ui.Exp2k = true
end
if string.find(matches.event, expGain2kEnded) then
  ui.Exp2k = false
  tempTimer(60, [[ ui.TopContainerMCTop:clear() ]])
end

-- 4X EXP events
if string.find(matches.event, expGain4k) then
  ui.Exp4k = true
else
  ui.Exp4k = false
  tempTimer(60, [[ ui.TopContainerMCTop:clear() ]])
end


selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
copy()
ui.TopContainerMCTop:clear()
ui.TopContainerMCTop:appendBuffer()
deleteLine() --Remove Captured Line (Comment out to disable)
cecho("\n&lt;black:dark_goldenrod&gt;&lt;b&gt;"..matches[1].."&lt;/b&gt;\n\n")

-- Clear the line from the top container after some time
--tempTimer(10, function() ui.TopContainerMC:clear() end)

moveCursorEnd("MainBuffer")
selectCurrentLine("MainBuffer")
deleteLine("MainBuffer")

moveCursorUp(2)
--selectCurrentLine()

for i = 1, 3, 1 do
  if getCurrentLine() == "" then
    --debugc("Deleted: "..getCurrentLine())
    deleteLine()
  end
  moveCursorDown()
  selectCurrentLine()
end


appendBuffer("ui.ChatMC")
appendBuffer("ChatBuffer")</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Mud events</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\&lt;\[mudevent\]\&gt;(?&lt;event&gt;.*)</string>
          
          <string>^\&lt;\&lt;\&lt; (.*) has killed the (?&lt;event&gt;.*)\! 2x EXP \+30 Minutes\! \&gt;\&gt;\&gt;</string>
          
          <string>^(.*)?For the next 30 minutes\, experience is (?&lt;quadexp&gt;\w+)</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Scheduled Events</name>
        <script>-- Trigger: Events
-- Pattern: Various
-- TODO: Description: Capture other events (still working on this one)

--[[
Num  Name                    Date      Time      Duration Starts In
---- ----------------------- --------- --------- -------- ------------
[7 ] Bloodbath (War)         Wednesday 19:45 EST   0h 30m In Progress! 
[8 ] Well-Traveled Mudder    Wednesday 20:15 EST   0h 45m   0d  0h 15m 

]]

ui = ui or {}
ui.CurrentEvent = matches.event

local mudevent = "Event: "..ui.CurrentEvent
--selectCurrentLine()
setBgColor(unpack(ui.BgColorRGB))
--copy()
ui.TopContainerMCTop:appendBuffer(mudevent)
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Mud events</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\*\s+Event \'(?&lt;event&gt;.*)\' has started\!\s+\*$</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Sprites</name>
        <script>-- Trigger: Sprites
-- Pattern: Various
-- Description: Capture sprite events and send them to the Events list.

--[[
Sprites:
sunsurge (yellow)
lifestream (cyan)
earthguard (green)
windstrike (sky_blue)

Color logic is applied in Scripts/UI Update Functions/UI_UpdateStatus Event (Left)
]]

ui = ui or {}

ui.SpriteType = firstToUpper(matches.sprite) or ""
ui.SpriteLocation = matches.location or ""
ui.SpriteTimer = matches.time or 5


if matches.escaped then
  ui.SpriteType = nil
  ui.SpriteLocation = nil
  ui.SpriteTimer = nil
end

UpdateStatus()</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Mud events</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\&lt;\[mudevent\]\&gt; A[n]? (?&lt;sprite&gt;\w+) sprite has been spotted somewhere in (?&lt;location&gt;.*)\!$</string>
          
          <string>^\&lt;\[mudevent\]\&gt; A[n]? (?&lt;sprite&gt;\w+) sprite will be departing (?&lt;location&gt;.*) in (?&lt;time&gt;\d+) minutes\!$</string>
          
          <string>^\&lt;\[mudevent\]\&gt; A[n]? (?&lt;sprite&gt;\w+) sprite has (?&lt;escaped&gt;\w+)\, vanishing from the realm\!$</string>
          
          <string>^\&lt;\[mudevent\]\&gt; A[n]? (\w+) sprite has granted its blessing to (\w+) and (?&lt;escaped&gt;\w+) from the realm\!$</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Quests</name>
      <script/>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>Quests\Quest Objective Capture</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Quest Objective Capture</name>
        <script/>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Quests\Quest Objective Capture</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
</regexCodeList>
        <regexCodePropertyList>
</regexCodePropertyList>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>1 Quest start</name>
          <script>-- Trigger: 1 Quest start
-- Pattern (regex): ^You ask (.*) for a quest\.$
-- Description: Starting a quest

ui = ui or {}
ui.onQuest = true

-- Optional stuff from the ErionMud GamePack
if gp.version then
  disableTrigger("Buffs")
  expandAlias("cr off")
end

send("quest info")  -- Inform the player and feed the triggers.
</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Quests\Quest Objective Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>^You ask (.*) for a quest\.$</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>1</integer>
          </regexCodePropertyList>
          
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>2 Quest info capture</name>
          <script>-- Trigger: 2 Quest info capture
-- Pattern: Various
-- Description: Capture quest details
-- Note: I struggled with the regex to capture areas with "of" in the name, so I just added them all. :)

ui = ui or {}

ui.questArea = matches.area
ui.questRoom = matches.room
ui.questTarget = matches.target

-- Write quest report to the top console
ui.TopContainerMC:clear()
ui.TopContainerMC:cecho("&lt;yellow&gt;QUEST!----------------------------------------")
ui.TopContainerMC:cecho("\n&lt;orange_red&gt;  Target: &lt;green&gt;" .. ui.questTarget)
ui.TopContainerMC:cecho("\n&lt;orange_red&gt;    Area: &lt;yellow&gt;" .. ui.questArea)
ui.TopContainerMC:cecho("\n&lt;orange_red&gt;    Room: &lt;cyan&gt;" .. ui.questRoom)
ui.TopContainerMC:cecho("\n&lt;yellow&gt;----------------------------------------------\n")

echo("\n\n")
uiCecho("&lt;yellow&gt;--------------------------------------------\n")
uiCecho("&lt;orange_red&gt;Use: &lt;green&gt;rtq &lt;orange_red&gt;to runto &lt;yellow&gt;" .. matches.area .. "\n")
uiCecho("&lt;yellow&gt;--------------------------------------------\n\n")

-- Optional: Add a highlight using the 'Highlighter' package
if Highlighter then
  expandAlias("hl item add quest#"..ui.questTarget)
end</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Quests\Quest Objective Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;The Forest of Ancient Guardians)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Town of Bandell)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Tree of Pixies II)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;High Tower of Sorcery)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Jungle of Xyzzyxx)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Avenue of the Ancients Highway)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;City of Illyria)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Field of Dreams Highway)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Realms of Enchantment)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Land of the Lost Elves)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Isle of the Dead)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Chasm of Mayhem Highway)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Castle of Darkness)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;City of Tanaria)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Paths to Ancient Legends Highway)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Kextra\'s Legendary Land of Myth)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Jungle of Artemisia)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;Tree of Pixies)\.$</string>
            
            <string>^You are on a quest to (slay|recover|spar with) (?&lt;target&gt;.*) in (the vicinity of )?(?&lt;room&gt;.*) of (?&lt;area&gt;.*)\.$</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
            
            <integer>1</integer>
          </regexCodePropertyList>
          
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>3 Quest bonus timer</name>
          <script>-- Trigger: 3 Quest bonus timer
-- Pattern (regex): ^Finish the quest in under (?&lt;min&gt;\d+) (minutes|minute) and (?&lt;sec&gt;\d+) seconds for a bonus reward\.$
-- Description: Start a bonus timer.

ui = ui or {}

ui.questBonusTimerMin = matches.min
ui.questBonusTimerSec = matches.sec or 0
ui.questBonusTimerTotal = ((matches.min * 60) + matches.sec)


-- Creates a timer that is used by the UI.
if (ui.questBonusTimer == "0") or (ui.questBonusTimer == nil) then
  -- Don't create multiple timers
  ui.questBonusTimer = tempTimer(ui.questBonusTimerTotal, function() ui.questBonusTimer = "0" end)
end
</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Quests\Quest Objective Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>^Finish the quest in under (?&lt;min&gt;\d+) (minutes|minute) and (?&lt;sec&gt;\d+) seconds for a bonus reward\.$</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>1</integer>
          </regexCodePropertyList>
          
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
            
          <name>4 Quest end</name>
          <script>-- Trigger: 4 Quest end
-- Pattern (regex): ^You inform (.*) you have completed your quest\.$
-- Pattern (regex): ^You shamefully fail your quest
-- Description: Clear variables

ui = ui or {}
gp = gp or {}

-- Optional highlight from the Highlighter package
if Highlighter then
  expandAlias("hl item remove "..ui.questTarget)
end

ui.onQuest = false
ui.questArea = nil
ui.questRoom = nil
ui.questTarget = nil

-- Kill the timer if needed
killTimer(ui.questBonusTimer)
ui.questBonusTimer = "0"

-- Reset some settings
cecho("\n&lt;orange_red&gt;Quest variables cleared")

-- Optional stuff from the ErionMud GamePack
if gp.version then
  cecho("\n&lt;orange_red&gt;Buff trigger activated")
  enableTrigger("Buffs")
  -- expandAlias("cr on")
end

ui.TopContainerMC:clear()</script>
            
          <triggerType>0</triggerType>
            
          <conditonLineDelta>0</conditonLineDelta>
            
          <mStayOpen>0</mStayOpen>
            
          <mCommand/>
            
          <packageName/>
            
          <path>Quests\Quest Objective Capture</path>
            
          <mFgColor>#ff0000</mFgColor>
            
          <mBgColor>#ffff00</mBgColor>
            
          <mSoundFile/>
            
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
            
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            
            <string>^You inform (.*) you have completed your quest\.$</string>
            
            <string>^You shamefully fail your quest</string>
          </regexCodeList>
          <regexCodePropertyList>
            
            <integer>1</integer>
            
            <integer>1</integer>
          </regexCodePropertyList>
          
        </Trigger>
        
      </TriggerGroup>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Fabled item</name>
        <script>-- Trigger: Fabled item
-- Pattern (regex): ^\s+(.*)?\sfabled\s(\w+)(.*)
-- Description: Highlighter

setBgColor(170,0,0)
setFgColor(255,255,255)
resetFormat()</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Quests</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^\s+(.*)?\sfabled\s(\w+)(.*)</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Quest rewards</name>
        <script>-- Trigger: Quest rewards
-- Pattern (regex): ^(?&lt;text&gt;.*) As a reward\, I am giving you (?&lt;exp&gt;\d+) experience and (?&lt;gold&gt;\d+) gold\.\'$
-- Pattern (regex): ^(?&lt;text&gt;.*) As a reward\, I am giving you (?&lt;qps&gt;\d+) questpoints and (?&lt;gold&gt;\d+) gold\.\'$
-- Description: Show rewards

if matches.exp then
  echo("\n\n")
  uiCecho("&lt;gold&gt;**************")
  uiCecho("&lt;green&gt;  EXP: " .. commaValue((tonumber(matches.exp))))
  uiCecho("&lt;yellow&gt; Gold: " .. commaValue((tonumber(matches.gold))))
  uiCecho("&lt;gold&gt;**************")
end

if matches.qps then
  echo("\n\n")
  uiCecho("&lt;gold&gt;**************")
  uiCecho("&lt;green&gt;  QPs: " .. commaValue((tonumber(matches.qps))))
  uiCecho("&lt;yellow&gt; Gold: " .. commaValue((tonumber(matches.gold))))
  uiCecho("&lt;gold&gt;**************")
end</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Quests</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^(?&lt;text&gt;.*) As a reward\, I am giving you (?&lt;exp&gt;\d+) experience and (?&lt;gold&gt;\d+) gold\.\'$</string>
          
          <string>^(?&lt;text&gt;.*) As a reward\, I am giving you (?&lt;qps&gt;\d+) questpoints and (?&lt;gold&gt;\d+) gold\.\'$</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Quest target complete</name>
        <script>-- Trigger: Quest target complete
-- Pattern: Various

ui = ui or {}

ui.TopContainerMC:clear()
ui.TopContainerMC:cecho("&lt;yellow&gt;QUEST!----------------------------------------")
ui.TopContainerMC:cecho("\n&lt;green&gt;Complete! Return to the Quest Giver!")

setBgColor(0,0,127)
</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Quests</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You have almost completed your QUEST</string>
          
          <string>^You have found your quest item</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Quest bonus remaining</name>
        <script>-- Trigger: Quest bonus remaining
-- Pattern (regex): ^You still have (.*) to get the reward bonus

selectCurrentLine()
setBgColor(0,0,170)</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Quests</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You still have (.*) to get the reward bonus</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    <TriggerGroup isActive="yes" isFolder="yes" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
        
      <name>Weather and Time</name>
      <script/>
        
      <triggerType>0</triggerType>
        
      <conditonLineDelta>0</conditonLineDelta>
        
      <mStayOpen>0</mStayOpen>
        
      <mCommand/>
        
      <packageName/>
        
      <path>Weather and Time</path>
        
      <mFgColor>#ff0000</mFgColor>
        
      <mBgColor>#ffff00</mBgColor>
        
      <mSoundFile/>
        
      <colorTriggerFgColor>#000000</colorTriggerFgColor>
        
      <colorTriggerBgColor>#000000</colorTriggerBgColor>
      <regexCodeList>
</regexCodeList>
      <regexCodePropertyList>
</regexCodePropertyList>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Weather events</name>
        <script>-- TODO: Capture weather events
-- Make sure 'spam -daycycle' is on
setBgColor(0,50,0)</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Weather and Time</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^The clouds part overhead, revealing a clear, blue sky</string>
          
          <string>^The sun slowly disappears in the west</string>
          
          <string>^Fine drops of rain begin to fall from the sky</string>
          
          <string>^The sun rises in the east</string>
          
          <string>^The stars twinkle into existence</string>
          
          <string>^The sky darkens and begins to downpour</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Moons</name>
        <script>-- TODO: Capture moon events
ui = ui or {}

if matches.moon == "red" then ui.RedMoonRising = true end
if matches.moon == "white" then ui.WhiteMoonRising = true end

setBgColor(0,25,0)</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Weather and Time</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^You see the full (?&lt;moon&gt;\w+) moon rising in the east</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      <Trigger isActive="yes" isFolder="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isColorTrigger="" isColorTriggerFg="" isColorTriggerBg="">
          
        <name>Time events</name>
        <script>-- TODO: Capture time events
setBgColor(0,25,0)</script>
          
        <triggerType>0</triggerType>
          
        <conditonLineDelta>0</conditonLineDelta>
          
        <mStayOpen>0</mStayOpen>
          
        <mCommand/>
          
        <packageName/>
          
        <path>Weather and Time</path>
          
        <mFgColor>#ff0000</mFgColor>
          
        <mBgColor>#ffff00</mBgColor>
          
        <mSoundFile/>
          
        <colorTriggerFgColor>#000000</colorTriggerFgColor>
          
        <colorTriggerBgColor>#000000</colorTriggerBgColor>
        <regexCodeList>
          
          <string>^The new day has begun</string>
        </regexCodeList>
        <regexCodePropertyList>
          
          <integer>1</integer>
        </regexCodePropertyList>
        
      </Trigger>
      
    </TriggerGroup>
    
  </TriggerPackage>
  <KeyPackage>
</KeyPackage>
</MudletPackage>
